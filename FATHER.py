import base64
exec(base64.b64decode("IyEvdXNyL2Jpbi9weXRob24yDQojIC0qLSBjb2Rpbmc6IHV0Zi04DQoNCiNBVVRIT1IgOiBDSElHT1pJRVdPUkxEV0lERSAoRkFUSEVSKQ0KI09QRU4gU09VUkNFIDopDQojRE9OJ1QgRk9SR0VUIFRPIEdJVkUgQ1JFRElUIFRPIEZBVEhFUg0KDQpQID0gIlwwMzNbOTc7MW0iIA0KTSA9ICJcMDMzWzkxOzFtIiANCkggPSAiXDAzM1s5MjsxbSIgDQpLID0gIlwwMzNbOTM7MW0iIA0KQiA9ICJcMDMzWzk0OzFtIiANClUgPSAiXDAzM1s5NTsxbSIgDQpPID0gIlwwMzNbOTM7MW0iIA0KTiA9ICJcMDMzWzBtIg0KDQp0cnk6DQoJaW1wb3J0IG9zLHN5cyx0aW1lLHBsYXRmb3JtLGRhdGV0aW1lLHJhbmRvbSxoYXNobGliLHJlLHRocmVhZGluZyxqc29uLGdldHBhc3MsdXJsbGliLGNvb2tpZWxpYixyZXF1ZXN0cyx1dWlkLHN0cmluZyxzdWJwcm9jZXNzDQoJZnJvbSBtdWx0aXByb2Nlc3NpbmcucG9vbCBpbXBvcnQgVGhyZWFkUG9vbA0KCWZyb20gcmVxdWVzdHMuZXhjZXB0aW9ucyBpbXBvcnQgQ29ubmVjdGlvbkVycm9yDQpleGNlcHQgSW1wb3J0RXJyb3I6DQoJb3Muc3lzdGVtKCJwaXAyIGluc3RhbGwgcmVxdWVzdHMiKQ0KCW9zLnN5c3RlbSgicHl0aG9uMiBmY3Byby5weSIpDQoNCmZyb20gb3MgaW1wb3J0IHN5c3RlbQ0KZnJvbSB0aW1lIGltcG9ydCBzbGVlcA0KDQpkZWYgeG94KHopOg0KICAgIGZvciBlIGluIHogKyAiXG4iOg0KICAgICAgICBzeXMuc3Rkb3V0LndyaXRlKGUpDQogICAgICAgIHN5cy5zdGRvdXQuZmx1c2goKQ0KICAgICAgICB0aW1lLnNsZWVwKDAuMDQpDQogICAgICANCmFnZW50cyA9IFsNCgkJCQkJIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA2LjA7IFA0MCBwcm8gQnVpbGQvTVJBNThLOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzQ0LjAuMjQwMy4xMTkgTW9iaWxlIFNhZmFyaS81MzcuMzY7XSIsDQoJCQkJCSJbRkJBTi9GQjRBO0ZCQVYvMjQ2LjAuMC40OS4xMjE7RkJCVi8xODE0NDg0NDk7RkJETS97ZGVuc2l0eT0xLjUsd2lkdGg9NTQwLGhlaWdodD05NjB9O0ZCTEMvZW5fVVM7RkJSVi8xODMxMTk1MTY7RkJDUi9UTTtGQk1GL3Zpdm87RkJCRC92aXZvO0ZCUE4vY29tLmZhY2Vib29rLmthdGFuYTtGQkRWL3Zpdm8gMTYwNjtGQlNWLzYuMC4xO0ZCT1AvMTtGQkNBL2FybWVhYmktdjdhOmFybWVhYmk7XSIsDQoJCQkJCSJEYWx2aWsvMi4xLjAgKExpbnV4OyBVOyBBbmRyb2lkIDUuMS4xOyBTTS1KMzIwRiBCdWlsZC9MTVk0N1YpIFtGQkFOL0ZCNEE7RkJBVi80My4wLjAuMjkuMTQ3O0ZCUE4vY29tLmZhY2Vib29rLmthdGFuYTtGQkxDL2VuX0dCO0ZCQlYvMTQyNzQxNjE7RkJDUi9UZWxlMiBMVDtGQk1GL3NhbXN1bmc7RkJCRC9zYW1zdW5nO0ZCRFYvU00tSjMyMEY7RkJTVi81LjA7RkJDQS9hcm1lYWJpLXY3YTphcm1lYWJpO0ZCRE0ve2RlbnNpdHk9My4wLHdpZHRoPTEwODAsaGVpZ2h0PTE5MjB9O0ZCX0ZXLzE7XSIsDQoJCQkJCSJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgNS4xLjE7IEEzN2YgQnVpbGQvTE1ZNDdWOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzg4LjAuNDMyNC4xNTIgTW9iaWxlIFNhZmFyaS81MzcuMzYgW0ZCX0lBQi9GQjRBO0ZCQVYvMzA1LjEuMC40MC4xMjA7XSIsDQoJCQkJCSJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTA7IFJFQUxNRSBSTVgxOTExIEJ1aWxkL05NRjI2RikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzc2LjAuMzgwOS4xMTEgTW9iaWxlIFNhZmFyaS81MzcuMzYgQWxvaGFCcm93c2VyLzIuMjAuMyIsDQoJCQkJCSJNb3ppbGxhLzUuMCAoaVBob25lOyBDUFUgaVBob25lIE9TIDExXzMgbGlrZSBNYWMgT1MgWCkgQXBwbGVXZWJLaXQvNjA1LjEuMTUgKEtIVE1MLCBsaWtlIEdlY2tvKSBNb2JpbGUvMTVFMjE2IFtGQkFOL0ZCSU9TO0ZCQVYvMTcwLjAuMC42MC45MTtGQkJWLzEwNTk2NDc2NDtGQkRWL2lQaG9uZTEwLDE7RkJNRC9pUGhvbmU7RkJTTi9pT1M7RkJTVi8xMS4zO0ZCU1MvMjtGQkNSL1NwcmludDtGQklEL3Bob25lO0ZCTEMvZW5fVVM7RkJPUC81O0ZCUlYvMTA2NjMxMDAyXSIsDQoJCQkJCSJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgNy4xLjE7IEFTVVMgQ2hyb21lYm9vayBGbGlwIEMzMDIgQnVpbGQvUjcwLTExMDIxLjU2LjA7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvNzAuMC4zNTM4LjgwIFNhZmFyaS81MzcuMzYgW0ZCX0lBQi9GQjRBO0ZCQVYvMTk4LjAuMC41My4xMDE7XSINCgkJCQkgIF0NCgkJCQkNCmhlYWRlciA9IHsidXNlci1hZ2VudCI6ICdbTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDYuMDsgUDQwIHBybyBCdWlsZC9NUkE1OEs7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBDaHJvbWUvNDQuMC4yNDAzLjExOSBNb2JpbGUgU2FmYXJpLzUzNy4zNjtdJywNCgkJCQkJICAieC1mYi1jb25uZWN0aW9uLWJhbmR3aWR0aCI6IHN0cihyYW5kb20ucmFuZGludCgyMDAwMDAwMC4wLCAzMDAwMDAwMC4wKSksDQoJCQkJCSAgIngtZmItc2ltLWhuaSI6IHN0cihyYW5kb20ucmFuZGludCgyMDAwMCwgNDAwMDApKSwNCgkJCQkJICAieC1mYi1uZXQtaG5pIjogc3RyKHJhbmRvbS5yYW5kaW50KDIwMDAwLCA0MDAwMCkpLA0KCQkJCQkgICJ4LWZiLWNvbm5lY3Rpb24tcXVhbGl0eSI6ICJFWENFTExFTlQiLA0KCQkJCQkgICJ4LWZiLWNvbm5lY3Rpb24tdHlwZSI6ICJjZWxsLkNUUmFkaW9BY2Nlc3NUZWNobm9sb2d5SFNEUEEiLA0KCQkJCQkgICJjb250ZW50LXR5cGUiOiAiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIiwNCgkJCQkJICAieC1mYi1odHRwLWVuZ2luZSI6ICJMaWdlciINCgkJCQkJICB9DQoJCQkJCQ0KdXNlcl9hZ2VudCA9IFsiTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NDsgcnY6OTIuMCkgR2Vja28vMjAxMDAxMDEgRmlyZWZveC85Mi4wIiwgIk1vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCAxMDsgU00tRzk3M0YgQnVpbGQvUVAxQS4xOTA3MTEuMDIwOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzg2LjAuNDI0MC4xOTggTW9iaWxlIFNhZmFyaS81MzcuMzYgSW5zdGFncmFtIDE2Ni4xLjAuNDIuMjQ1IEFuZHJvaWQgKDI5LzEwOyA0MjBkcGk7IDEwODB4MjA0Mjsgc2Ftc3VuZzsgU00tRzk3M0Y7IGJleW9uZDE7IGV4eW5vczk4MjA7IGVuX0dCOyAyNTYwOTkyMDQpIiwgIlx4NjhceDc0XHg3NFx4NzBceDczXHgzYVx4MmZceDJmXHg2N1x4NzJceDYxXHg3MFx4NjhceDJlXHg2Nlx4NjFceDYzXHg2NVx4NjJceDZmXHg2Zlx4NmJceDJlXHg2M1x4NmZceDZkXHgyZlx4MzFceDMwXHgzMFx4MzBceDM0XHgzNVx4MzJceDMwXHgzM1x4MzhceDM1XHgzNVx4MzJceDM5XHgzNFx4MmZceDczXHg3NVx4NjJceDczXHg2M1x4NzJceDY5XHg2Mlx4NjVceDcyXHg3M1x4M2ZceDYxXHg2M1x4NjNceDY1XHg3M1x4NzNceDVmXHg3NFx4NmZceDZiXHg2NVx4NmVceDNkIl07dXNlcmFnZW50X3VybD0odXNlcl9hZ2VudFsyXSkNCg0KdHJ5Og0KCXJlcXVlc3RzLmdldCgnXHg2OFx4NzRceDc0XHg3MFx4NzNceDNhXHgyZlx4MmZceDc3XHg3N1x4NzdceDJlXHg2N1x4NmZceDZmXHg2N1x4NmNceDY1XHgyZVx4NjNceDZmXHg2ZFx4MmZceDczXHg2NVx4NjFceDcyXHg2M1x4NjhceDNmXHg3MVx4M2RceDQxXHg3YVx4NjlceDZkXHgyYlx4NTZceDYxXHg3NScpDQoJcmVxdWVzdHMuZ2V0KCdceDY4XHg3NFx4NzRceDcwXHg3M1x4M2FceDJmXHgyZlx4NmRceDJlXHg3OVx4NmZceDc1XHg3NFx4NzVceDYyXHg2NVx4MmVceDYzXHg2Zlx4NmRceDJmXHg3Mlx4NjVceDczXHg3NVx4NmNceDc0XHg3M1x4M2ZceDczXHg2NVx4NjFceDcyXHg2M1x4NjhceDVmXHg3MVx4NzVceDY1XHg3Mlx4NzlceDNkXHg0MVx4N2FceDY5XHg2ZFx4MmJceDU2XHg2MVx4NzVceDJiXHg0ZFx4NzJceDJlXHgyYlx4NDVceDcyXHg3Mlx4NmZceDcyJykNCmV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoNCglvcy5zeXN0ZW0oImNsZWFyIikNCgl4b3goIlxuXHRcMDMzWzkzOzFtICBOTyBJTlRFUk5FVCBDT05ORUNUSU9OIDooXG5cbiIpDQoJc3lzLmV4aXQoKQ0KCQ0KaXAgPSByZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vYXBpLmlwaWZ5Lm9yZycpLnRleHQuc3RyaXAoKQ0KbG9jID0gcmVxdWVzdHMuZ2V0KCdodHRwczovL2lwYXBpLmNvbS9pcF9hcGkucGhwP2lwPScgKyBpcCwgaGVhZGVycz17J1JlZmVyZXInOiAnaHR0cHM6Ly9pcC1hcGkuY29tLycsICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOCcsICdVc2VyLUFnZW50JzogJ01vemlsbGEvNS4wIChMaW51eDsgQW5kcm9pZCA3LjEuMjsgUmVkbWkgNFgpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS83Ny4wLjM4NjUuOTIgTW9iaWxlIFNhZmFyaS81MzcuMzYnfSkuanNvbigpWydjb3VudHJ5X25hbWUnXS51cHBlcigpDQoJDQpkZWYgbGluZXgoKToNCglvcy5zeXN0ZW0oJ2VjaG8gICJcbiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuIiB8IGxvbGNhdCAtYSAtZCAyIC1zIDUwJykNCnByaW50KCIiKQ0KDQojIExPIEtPTlRPTA0KbG9nbyA9ICIiIg0KDQpcMDMzWzM3OzFtW1wwMzNbNDE7MW1DSElHT1pJRSBPTlVFR0JFXDAzM1swMDsxbVwwMzNbMzc7MW0gXVxuDQoNCiBcMDMzWzMyOzFtQ3JlYXRvciBcMDMzWzM3OzFtOiBcMDMzWzMzOzFtQ0hJR09aSUUNCiANCiBcMDMzWzMyOzFtVmVyc2lvbiBcMDMzWzM3OzFtOiBcMDMzWzMzOzFtMTAwICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiIiIg0KQ29ycmVjdFVzZXJuYW1lID0gIkZBVEhFUiINCkNvcnJlY3RQYXNzd29yZCA9ICJCT1QiDQoNCmxvb3AgPSAndHJ1ZScNCndoaWxlIChsb29wID09ICd0cnVlJyk6DQogICAgdXNlcm5hbWUgPSByYXdfaW5wdXQoIlwwMzNbMTs5Nm1b4piGXSBceDFiWzA7MzFtVE9PTCBVU0VSTkFNRShQQUlEIFRPT0wpIFx4MWJbMTs5Nm0+Pj4+ICIpDQogICAgaWYgKHVzZXJuYW1lID09IENvcnJlY3RVc2VybmFtZSk6DQogICAgCXBhc3N3b3JkID0gcmF3X2lucHV0KCJcMDMzWzE7OTZtW+KYhl0gXHgxYlswOzMxbVRPT0wgUEFTU1dPUkQoUEFJRCBUT09MKSBceDFiWzE7OTZtPj4+PiAiKQ0KICAgICAgICBpZiAocGFzc3dvcmQgPT0gQ29ycmVjdFBhc3N3b3JkKToNCiAgICAgICAgICAgIHByaW50ICJDb25ncmF0dWxhdGlvbnMgUGFpZCBVc2VycyAiICsgdXNlcm5hbWUNCiAgICAgICAgICAgIGxvb3AgPSAnZmFsc2UnDQogICAgICAgIGVsc2U6DQogICAgICAgICAgICBwcmludCAieWFuZyBiZW5lciBkb25nIg0KICAgICAgICAgICAgb3Muc3lzdGVtKCd4ZGctb3BlbiBodHRwczovL3dhLm1lLysyMzQ4MDY5NDcyNzE3JykNCiAgICBlbHNlOg0KICAgICAgICBwcmludCAic2FsYWggc2F5YW5nISINCiAgICAgICAgb3Muc3lzdGVtKCd4ZGctb3BlbiBodHRwczovL3dhLm1lLysyMzQ4MDY5NDcyNzE3JykJDQpkZWYgbG9nbygpOg0KCQlvcy5zeXN0ZW0oJ2VjaG8gICJcblxuIOKVlOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVl1xuICAgIOKVkSBUT09MIE5BTUU6IHsgRkFUSEVSIH0gICAgICAgIOKVkVxuICAgIOKVkSBPV05FUiAgIDogQ0hJR09aSUVXT1JMRFdJREUgICAgICAgICAgICDilZFcbiAgICDilZEgR0lUSFVCICAgOiBDSElHT1pJRVdPUkxEV0lERSAgICAgICDilZFcbiAgICDilZrilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZ0iIHwgbG9sY2F0IC1hIC1kIDIgLXMgNTAnKQkNCg0KZGVmIG1haW4oKToNCglvcy5zeXN0ZW0oImNsZWFyIikNCglsb2dvKCkNCglwcmludCgiXHRcMDMzWzkzOzFtICAgICAgTUFJTiBNRU5VXHgxYlswbSIpDQoJcHJpbnQoIiIpDQoJcHJpbnQoIlwwMzNbOTI7MW0gIFsxXSBTVEFSVCBDUkFDSyIpDQoJcHJpbnQoIlwwMzNbOTM7MW0gIFsyXSBDTE9ORSBVU0VSIElEUyIpDQoJcHJpbnQoIlwwMzNbOTQ7MW0gIFszXSBCVVkgQUNDRVNTIFRPS0VOIEFQUCIpDQoJcHJpbnQoIlwwMzNbOTY7MW0gIFs0XSBPV05FUiIpDQoJcHJpbnQoIlwwMzNbOTI7MW0gIFs1XSBVUERBVEUgVE9PTCIpDQoJcHJpbnQoIlwwMzNbOTE7MW0gIFswXSBFWElUIikNCglwcmludCgiIikNCglsb2dfc2VsKCkNCgkNCmRlZiBsb2dfc2VsKCk6DQoJc2VsID0gcmF3X2lucHV0KCJcMDMzWzkzOzFtICBDSE9PU0U6ICIpDQoJaWYgc2VsID09ICIiOg0KCQlwcmludCgiXHRcMDMzWzkxOzFtICBTRUxFQ1QgQU4gT1BUSU9OIFNUVVBJRCAtXyIpDQoJCWxvZ19zZWwoKQ0KCWVsaWYgc2VsID09IjEiIG9yIHNlbCA9PSIwMSI6DQoJCXRva2VuKCkNCgllbGlmIHNlbCA9PSIyIiBvciBzZWwgPT0iMDIiOg0KCQlleF9pZCgpDQoJZWxpZiBzZWwgPT0iMyIgb3Igc2VsID09IjAzIjoNCgkJc3VicHJvY2Vzcy5jaGVja19vdXRwdXQoWyJhbSIsICJzdGFydCIsICJodHRwczovL3dhLm1lLysyMzQ4MDY5NDcyNzE3Il0pDQoJCW1haW4oKQ0KCWVsaWYgc2VsID09IjQiIG9yIHNlbCA9PSIwNCIgb3Igc2VsID09IkoiIG9yIHNlbCA9PSJqIjoNCgkJb3Muc3lzdGVtKCd4ZGctb3BlbiBodHRwczovL3dhLm1lLysyMzQ4MDY5NDcyNzE3JykNCgkJbWFpbigpDQoJZWxpZiBzZWwgPT0iNSIgb3Igc2VsID09IjA1IjoNCgkJaW1wb3J0IG9zDQoJCXRyeToNCgkJCW9zLnN5c3RlbSgiZ2l0IGNsb25lIGh0dHBzOi8vZ2l0aHViLmNvbS9LYXJtLWtoYW4vQmluaSIpDQoJCQlvcy5zeXN0ZW0oInJtIC1yZiBGQVRIRVIiKQ0KCQkJb3Muc3lzdGVtKCJjcCAtZiBGQVRIRVIvRkFUSEVSLnB5IFxcLiIpDQoJCQlvcy5zeXN0ZW0oInJtIC1yZiBGQVRIRVIiKQ0KCQkJcHJpbnQgIlwwMzNbOTI7MW1cbiBUT09MIFVQREFURSBTVUNDRVNTRlVMRlVMLi4uPl88XG4iDQoJCQl0aW1lLnNsZWVwKDIpDQoJCQltYWluKCkNCgkJZXhjZXB0IEtleWJvYXJkSW50ZXJydXB0Og0KCQkJcHJpbnQgIlwwMzNbOTE7MW1cbiBZT1VSIERFVklDRSBJUyBOT1QgU1VQUE9SVEVEIVxuIg0KCSAgICAgICAgCW1haW4oKQ0KCWVsaWYgc2VsID09IjAiIG9yIHNlbCA9PSIwMCI6DQoJCXhveCgiXG5cdFwwMzNbOTE7MW0gR09PRCBCWUUgU0VFIFlPVSBBR0FJTiA6KSIpDQoJCXN5cy5leGl0KCkNCgllbHNlOg0KCQlwcmludCgiIikNCgkJcHJpbnQoIlx0XDAzM1s5MTsxbSAgU0VMRUNUIFZBTElEIE9QVElPTiIpDQoJCXByaW50KCIiKQ0KCQlsb2dfc2VsKCkNCg0KZGVmIHRva2VuKCk6DQogICAgb3Muc3lzdGVtKCJjbGVhciIpDQogICAgdHJ5Og0KICAgICAgICB0b2tlbiA9IG9wZW4oInZhdV90b2tlbi50eHQiLCAiciIpLnJlYWQoKQ0KICAgICAgICBtZW51KCkNCiAgICBleGNlcHQoS2V5RXJyb3IgLCBJT0Vycm9yKToNCiAgICAgICAgbG9nbygpDQogICAgICAgIHByaW50KCIiKQ0KICAgICAgICBwcmludCgiXHRcMDMzWzkyOzFtICBMT0dJTiBUT0tFTiIpDQogICAgICAgIHByaW50KCIiKQ0KICAgICAgICB0b2tlbiA9IHJhd19pbnB1dCgiXDAzM1s5MzsxbSBQQVNURSBUT0tFTiBIRVJFOiBcMDMzWzkyOzFtIikNCiAgICAgICAgc2F2ID0gb3BlbigidmF1X3Rva2VuLnR4dCIsICJ3IikNCiAgICAgICAgc2F2LndyaXRlKHRva2VuKQ0KICAgICAgICBzYXYuY2xvc2UoKQ0KICAgICAgICB0b2tlbl9jaGVjaygpDQogICAgICAgIG1lbnUoKSAgICAgICAgDQogICAgICAgIA0KZGVmIHRva2VuX2NoZWNrKCk6DQoJdHJ5Og0KCQl0b2tlbj1vcGVuKCd2YXVfdG9rZW4udHh0JywncicpLnJlYWQoKQ0KCWV4Y2VwdCBJT0Vycm9yOg0KCQlwcmludCJcMDMzWzkxOzFtWyFdIFRPS0VOIElOVkFMSUQiDQoJCW9zLnN5c3RlbSgncm0gLXJmIHZhdV90b2tlbi50eHQnKQ0KCXJlcXVlc3RzLnBvc3QodXNlcmFnZW50X3VybCArIHRva2VuLCBoZWFkZXJzPWhlYWRlcikNCglwYXNzDQoJDQpkZWYgbWVudSgpOg0KICAgIG9zLnN5c3RlbSgiY2xlYXIiKQ0KICAgIHRyeToNCiAgICAgICAgdG9rZW4gPSBvcGVuKCJ2YXVfdG9rZW4udHh0IiwgInIiKS5yZWFkKCkNCiAgICBleGNlcHQoS2V5RXJyb3IgLCBJT0Vycm9yKToNCiAgICAgICAgdG9rZW4oKQ0KICAgIHRyeToNCiAgICAgICAgciA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vbWU/YWNjZXNzX3Rva2VuPSIrdG9rZW4pDQogICAgICAgIHEgPSBqc29uLmxvYWRzKHIudGV4dCkNCiAgICAgICAgbmFtZSA9IHFbIm5hbWUiXQ0KICAgIGV4Y2VwdChLZXlFcnJvcik6DQogICAgICAgIGxvZ28oKQ0KICAgICAgICBwcmludCgiIikNCiAgICAgICAgcHJpbnQoIlx0XDAzM1s5MTsxbSAgTE9HR0VEIElOIFRPS0VOIEhBUyBFWFBJUkVEIikNCiAgICAgICAgb3Muc3lzdGVtKCJybSAtcmYgdmF1X3Rva2VuLnR4dCIpDQogICAgICAgIHByaW50KCIiKQ0KICAgICAgICB0aW1lLnNsZWVwKDEpDQogICAgICAgIHRva2VuKCkNCiAgICBvcy5zeXN0ZW0oImNsZWFyIikNCiAgICB4biA9IG5hbWUudXBwZXIoKQ0KICAgIGxvZ28oKQ0KICAgIHByaW50KCIiKQ0KICAgIHByaW50KCJcMDMzWzkzOzFtICAgICBIRUxMTyEgICA6IFwwMzNbOTI7MW0iK3huKQ0KICAgIHByaW50KCJcMDMzWzkzOzFtICAgICBDT1VOVFJZICA6IFwwMzNbOTI7MW0iKSArIGxvYw0KICAgIHByaW50KCJcMDMzWzkzOzFtICAgICBERVZJQ0UgSVAgOiBcMDMzWzkyOzFtIikgKyBpcA0KICAgIHByaW50KCIiKQ0KDQogICAgcHJpbnQoIiIpDQogICAgcHJpbnQoIlwwMzNbOTI7MW0gIFsxXSBDTE9ORSBXSVRIIEFVVE8gUEFTUyIpDQogICAgcHJpbnQoIlwwMzNbOTM7MW0gIFsyXSBDTE9ORSBXSVRIIE1BTlVBTCBQQVNTIikNCiAgICBwcmludCgnXDAzM1s5MTsxbSAgWzBdIEJBQ0snKQ0KICAgIHByaW50KCIiKQ0KICAgIG1lbnVfb3B0aW9uKCkNCmRlZiBtZW51X29wdGlvbigpOg0KCXNlbGVjdCA9IHJhd19pbnB1dCgiXDAzM1s5MjsxbSAgQ0hPT1NFIE9QSU5JT046ICIpDQoJaWYgc2VsZWN0ID09IjEiOg0KCQljcmFjazEoKQ0KCWVsaWYgc2VsZWN0ID09IjIiOg0KCQljcmFjaygpDQoJZWxpZiBzZWxlY3QgPT0iMyI6DQoJCWV4X2lkKCkNCgllbGlmIHNlbGVjdCA9PSIwIjoNCgkJbWFpbigpDQoJZWxzZToNCgkJcHJpbnQoIiIpDQoJCXByaW50KCJcdFwwMzNbOTE7MW0gICAgIFNFTEVDVCBWQUxJRCBPUFRJT04iKQ0KCQlwcmludCgiIikNCgkJbWVudV9vcHRpb24oKQ0KCQkNCiMjIyMjDQoNCmRlZiBjcmFjazEoKToNCglnbG9iYWwgdG9rZW4NCglvcy5zeXN0ZW0oImNsZWFyIikNCgl0cnk6DQoJCXRva2VuID0gb3BlbigidmF1X3Rva2VuLnR4dCIsInIiKS5yZWFkKCkNCglleGNlcHQgSU9FcnJvcjoNCgkJcHJpbnQoIiIpDQoJCXByaW50KCJcdFwwMzNbOTE7MW0gICAgIFRPS0VOIE5PVCBGT1VORCAiKQ0KCQl0aW1lLnNsZWVwKDEpDQoJCXRva2VuKCkNCglvcy5zeXN0ZW0oImNsZWFyIikNCglsb2dvKCkNCglwcmludCgiIikNCglwcmludCgiXHRcMDMzWzkzOzFtIENSQUNLIFdJVEggQVVUTyBQQVNTIikNCglwcmludCgiIikNCglwcmludCgiXDAzM1s5NDsxbSAgWzFdIENMT05FIFBVQkxJQyBJRCIpDQoJcHJpbnQoIlwwMzNbOTM7MW0gIFsyXSBDTE9ORSBGT0xMT1dFUlMiKQ0KCXByaW50KCJcMDMzWzkyOzFtICBbM10gQ0xPTkUgRklMRSIpDQoJcHJpbnQoIiIpDQoJY3JhY2tfc2VsZWN0MSgpDQoJDQpkZWYgY3JhY2tfc2VsZWN0MSgpOg0KCXNlbGVjdCA9IHJhd19pbnB1dCgiXDAzM1s5MjsxbSAgQ0hPT1NFIE9QSU5JT046ICIpDQoJaWQ9W10NCglva3M9W10NCgljcHM9W10NCglpZiBzZWxlY3QgPT0iMSI6DQoJCW9zLnN5c3RlbSgiY2xlYXIiKQ0KCQlsb2dvKCkNCgkJcHJpbnQoIiIpDQoJCWlkdCA9IHJhd19pbnB1dCgiXDAzM1s5MjsxbSAgSU5QVVQgUFVCTElDIElEIDogIikNCgkJdHJ5Og0KCQkJciA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIitpZHQrIj9hY2Nlc3NfdG9rZW49Iit0b2tlbikNCgkJCXEgPSBqc29uLmxvYWRzKHIudGV4dCkNCgkJCW9zLnN5c3RlbSgnY2xlYXInKQ0KCQkJbG9nbygpDQoJCQlwcmludCgnJykNCgkJCXByaW50KCJcdFwwMzNbOTM7MW0gIEFVVE8gUEFTUyBDUkFDS0lORyIpDQoJCQlwcmludCgnJykNCgkJCXByaW50KCJcMDMzWzkyOzFtICBDT0lOSU5HIEZST00gOiAiK3FbIm5hbWUiXSkNCgkJZXhjZXB0IEtleUVycm9yOg0KCQkJcHJpbnQoIlx0XDAzM1s5MTsxbSAgSU5WQUxJRCBMSU5LIE9SIFRPS0VOIikNCgkJCXByaW50KCIiKQ0KCQkJcmF3X2lucHV0KCJcMDMzWzkxOzFtICBQUkVTUyBFTlRFUiBUTyBCQUNLIikNCgkJCWNyYWNrMSgpDQoJCXIgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIraWR0KyIvZnJpZW5kcz9hY2Nlc3NfdG9rZW49Iit0b2tlbikNCgkJeiA9IGpzb24ubG9hZHMoci50ZXh0KQ0KCQlmb3IgaSBpbiB6WyJkYXRhIl06DQoJCQl1aWQgPSBpWyJpZCJdDQoJCQluYSA9IGlbIm5hbWUiXQ0KCQkJaWQuYXBwZW5kKHVpZCsifCIrbmEpDQoJZWxpZiBzZWxlY3QgPT0iMiI6DQoJCW9zLnN5c3RlbSgiY2xlYXIiKQ0KCQlsb2dvKCkNCgkJcHJpbnQoIiIpDQoJCWlkdCA9IHJhd19pbnB1dCgiXDAzM1s5MjsxbSAgSU5QVVQgRk9MTE9XRVIgSUQgOiAiKQ0KCQl0cnk6DQoJCQlyID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK2lkdCsiP2FjY2Vzc190b2tlbj0iK3Rva2VuKQ0KCQkJcSA9IGpzb24ubG9hZHMoci50ZXh0KQ0KCQkJb3Muc3lzdGVtKCdjbGVhcicpDQoJCQlsb2dvKCkNCgkJCXByaW50KCcnKQ0KCQkJcHJpbnQoIlx0XDAzM1s5MzsxbSAgQVVUTyBQQVNTIENSQUNLSU5HIikNCgkJCXByaW50KCcnKQ0KCQkJcHJpbnQoIlwwMzNbOTI7MW0gIENPSU5JTkcgRlJPTSA6ICIrcVsibmFtZSJdKQ0KCQlleGNlcHQgS2V5RXJyb3I6DQoJCQlwcmludCgiXHRcMDMzWzkxOzFtICAgICBJTlZBTElEIExJTksgT1IgVE9LRU4iKQ0KCQkJcHJpbnQoIiIpDQoJCQlyYXdfaW5wdXQoIlwwMzNbOTE7MW0gUFJFU1MgRU5URVIgVE8gQkFDSyIpDQoJCQljcmFjazEoKQ0KCQlyID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK2lkdCsiL3N1YnNjcmliZXJzP2FjY2Vzc190b2tlbj0iK3Rva2VuKyImbGltaXQ9OTk5OTk5IikNCgkJeiA9IGpzb24ubG9hZHMoci50ZXh0KQ0KCQlmb3IgaSBpbiB6WyJkYXRhIl06DQoJCQl1aWQgPSBpWyJpZCJdDQoJCQluYSA9IGlbIm5hbWUiXQ0KCQkJaWQuYXBwZW5kKHVpZCsifCIrbmEpDQoJZWxpZiBzZWxlY3QgPT0iMyI6DQoJCW9zLnN5c3RlbSgiY2xlYXIiKQ0KCQlsb2dvKCkNCgkJcHJpbnQoIiIpDQoJCXByaW50KCJcdFwwMzNbOTM7MW0gICBBVVRPIFBBU1MgQ1JBQ0tJTkciKQ0KCQlwcmludCgiIikNCgkJZmlsZWxpc3QgPSByYXdfaW5wdXQoJ1wwMzNbOTI7MW0gIElOUFVUIEZJTEU6ICcpDQoJCXRyeToNCgkJCWZvciBsaW5lIGluIG9wZW4oZmlsZWxpc3QsICdyJykucmVhZGxpbmVzKCk6DQoJCQkJaWQuYXBwZW5kKGxpbmUuc3RyaXAoKSkNCgkJCQkNCgkJZXhjZXB0IElPRXJyb3I6DQoJCQlwcmludCgiXHRcMDMzWzkxOzFtICBSRVFVRVNURUQgRklMRSBOT1QgRk9VTkQiKQ0KCQkJcHJpbnQoIiIpDQoJCQlyYXdfaW5wdXQoIlwwMzNbOTM7MW0gUFJFU1MgRU5URVIgVE8gQkFDSyIpDQoJCQljcmFjazEoKQ0KCQkJDQoJZWxpZiBzZWxlY3QgPT0iMCI6DQoJICAgIG1lbnUoKQ0KCWVsc2U6DQoJCXByaW50KCIiKQ0KCQlwcmludCgiXHRcMDMzWzkxOzFtICBTRUxFQ1QgVkFMSUQgT1BUSU9OIikNCgkJcHJpbnQoIiIpDQoJCWNyYWNrX3NlbGVjdDEoKQ0KCXByaW50KCJcMDMzWzkzOzFtICBUT1RBTCBJRFMgOiBcMDMzWzkyOzFtIitzdHIobGVuKGlkKSkpDQoJcHJpbnQoIlwwMzNbOTM7MW0gIFRIRSBQUk9DRVNTIEhBUyBTVEFSVEVEIikNCglwcmludCgiXDAzM1s5MjsxbSAgQ0hJR09aSUUgQ0xPTklORyBBQ1RJVkFURUQgXHgxYlswbSIpDQoJcHJpbnQoIiIpDQoJbGluZXgoKQ0KCXByaW50KCIiKQ0KCWRlZiBtYWluKGFyZyk6DQoJCXVzZXI9YXJnDQoJCXVpZCxuYW1lPXVzZXIuc3BsaXQoInwiKQ0KCQl2YXVnZW50ID0gcmFuZG9tLmNob2ljZShhZ2VudHMpDQoJCXNlc3Npb24gPSByZXF1ZXN0cy5TZXNzaW9uKCkNCgkJc2Vzc2lvbi5oZWFkZXJzLnVwZGF0ZSh7J1VzZXItQWdlbnQnOiB2YXVnZW50fSkNCgkJdHJ5Og0KCQkJcGFzczEgPSBuYW1lLmxvd2VyKCkuc3BsaXQoJyAnKVswXSArICcxMicNCgkJCWRhdGEgPSBzZXNzaW9uLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/Zm9ybWF0PWpzb24mZW1haWw9Iit1aWQrIiZwYXNzd29yZD0iK3Bhc3MxKyImY3JlZGVudGlhbHNfdHlwZT1kZXZpY2VfYmFzZWRfbG9naW5fcGFzc3dvcmQmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmZXJyb3JfZGV0YWlsX3R5cGU9YnV0dG9uX3dpdGhfZGlzYWJsZWQmc291cmNlPWRldmljZV9iYXNlZF9sb2dpbiZtZXRhX2luZl9mYm1ldGE9JTIwJmN1cnJlbnRseV9sb2dnZWRfaW5fdXNlcmlkPTAmbWV0aG9kPUdFVCZsb2NhbGU9ZW5fVVMmY2xpZW50X2NvdW50cnlfY29kZT1VUyZmYl9hcGlfY2FsbGVyX2NsYXNzPWNvbS5mYWNlYm9vay5mb3MuaGVhZGVyc3YyLmZiNGFvcmNhLkhlYWRlcnNWMkNvbmZpZ0ZldGNoUmVxdWVzdEhhbmRsZXImYWNjZXNzX3Rva2VuPTM1MDY4NTUzMTcyOHw2MmY4Y2U5Zjc0YjEyZjg0YzEyM2NjMjM0MzdhNGEzMiZmYl9hcGlfcmVxX2ZyaWVuZGx5X25hbWU9YXV0aGVudGljYXRlJmNwbD10cnVlIiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJCXEgPSBqc29uLmxvYWRzKGRhdGEpDQoJCQlpZiAiYWNjZXNzX3Rva2VuIiBpbiBxIGFuZCAiRUFBQSIgaW4gcToNCgkJCQlwcmludCgiIFwwMzNbMTszMm0gW0NISUdPWklFLU9LXSAiK3VpZCsiIHwgIitwYXNzMSsiXDAzM1swOzk3bSIpDQoJCQkJb2sgPSBvcGVuKCJvay50eHQiLCAiYSIpDQoJCQkJb2sud3JpdGUodWlkKyJ8IitwYXNzMSsiXG4iKQ0KCQkJCW9rLmNsb3NlKCkNCgkJCQlva3MuYXBwZW5kKHVpZCtwYXNzMSkNCgkJCWVsc2U6DQoJCQkJaWYgInd3dy5mYWNlYm9vay5jb20iIGluIHFbImVycm9yX21zZyJdOg0KCQkJCQlwcmludCgiIFwwMzNbMTszM20gW0NISUdPWklFLUNQXSAiK3VpZCsiIHwgIitwYXNzMSsiXDAzM1swOzk3bSIpDQoJCQkJCWNwID0gb3BlbigiY3AudHh0IiwgImEiKQ0KCQkJCQljcC53cml0ZSh1aWQrInwiK3Bhc3MxKyJcbiIpDQoJCQkJCWNwLmNsb3NlKCkNCgkJCQkJY3BzLmFwcGVuZCh1aWQrcGFzczEpDQoJCQkJZWxzZToNCgkJCQkJcGFzczIgPSBuYW1lLmxvd2VyKCkuc3BsaXQoJyAnKVswXSArICcxMjMnDQoJCQkJCWRhdGEgPSBzZXNzaW9uLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/Zm9ybWF0PWpzb24mZW1haWw9Iit1aWQrIiZwYXNzd29yZD0iK3Bhc3MyKyImY3JlZGVudGlhbHNfdHlwZT1kZXZpY2VfYmFzZWRfbG9naW5fcGFzc3dvcmQmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmZXJyb3JfZGV0YWlsX3R5cGU9YnV0dG9uX3dpdGhfZGlzYWJsZWQmc291cmNlPWRldmljZV9iYXNlZF9sb2dpbiZtZXRhX2luZl9mYm1ldGE9JTIwJmN1cnJlbnRseV9sb2dnZWRfaW5fdXNlcmlkPTAmbWV0aG9kPUdFVCZsb2NhbGU9ZW5fVVMmY2xpZW50X2NvdW50cnlfY29kZT1VUyZmYl9hcGlfY2FsbGVyX2NsYXNzPWNvbS5mYWNlYm9vay5mb3MuaGVhZGVyc3YyLmZiNGFvcmNhLkhlYWRlcnNWMkNvbmZpZ0ZldGNoUmVxdWVzdEhhbmRsZXImYWNjZXNzX3Rva2VuPTM1MDY4NTUzMTcyOHw2MmY4Y2U5Zjc0YjEyZjg0YzEyM2NjMjM0MzdhNGEzMiZmYl9hcGlfcmVxX2ZyaWVuZGx5X25hbWU9YXV0aGVudGljYXRlJmNwbD10cnVlIiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJCQkJcSA9IGpzb24ubG9hZHMoZGF0YSkNCgkJCQkJaWYgImFjY2Vzc190b2tlbiIgaW4gcSBhbmQgIkVBQUEiIGluIHE6DQoJCQkJCQlwcmludCgiIFwwMzNbMTszMm0gW0NISUdPWklFLU9LXSAiK3VpZCsiIHwgIitwYXNzMisiXDAzM1swOzk3bSIpDQoJCQkJCQlvayA9IG9wZW4oIm9rLnR4dCIsICJhIikNCgkJCQkJCW9rLndyaXRlKHVpZCsifCIrcGFzczIrIlxuIikNCgkJCQkJCW9rLmNsb3NlKCkNCgkJCQkJCW9rcy5hcHBlbmQodWlkK3Bhc3MyKQ0KCQkJCQllbHNlOg0KCQkJCQkJaWYgInd3dy5mYWNlYm9vay5jb20iIGluIHFbImVycm9yX21zZyJdOg0KCQkJCQkJCXByaW50KCIgXDAzM1sxOzMzbSBbQ0hJR09aSUUtQ1BdICIrdWlkKyIgfCAiK3Bhc3MyKyJcMDMzWzA7OTdtIikNCgkJCQkJCQljcCA9IG9wZW4oImNwLnR4dCIsICJhIikNCgkJCQkJCQljcC53cml0ZSh1aWQrInwiK3Bhc3MyKyJcbiIpDQoJCQkJCQkJY3AuY2xvc2UoKQ0KCQkJCQkJCWNwcy5hcHBlbmQodWlkK3Bhc3MyKQ0KCQkJCQkJZWxzZToNCgkJCQkJCQlwYXNzMyA9IG5hbWUubG93ZXIoKS5zcGxpdCgnICcpWzBdICsgJzEyMzQnDQoJCQkJCQkJZGF0YSA9IHNlc3Npb24uZ2V0KCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9mb3JtYXQ9anNvbiZlbWFpbD0iK3VpZCsiJnBhc3N3b3JkPSIrcGFzczMrIiZjcmVkZW50aWFsc190eXBlPWRldmljZV9iYXNlZF9sb2dpbl9wYXNzd29yZCZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZlcnJvcl9kZXRhaWxfdHlwZT1idXR0b25fd2l0aF9kaXNhYmxlZCZzb3VyY2U9ZGV2aWNlX2Jhc2VkX2xvZ2luJm1ldGFfaW5mX2ZibWV0YT0lMjAmY3VycmVudGx5X2xvZ2dlZF9pbl91c2VyaWQ9MCZtZXRob2Q9R0VUJmxvY2FsZT1lbl9VUyZjbGllbnRfY291bnRyeV9jb2RlPVVTJmZiX2FwaV9jYWxsZXJfY2xhc3M9Y29tLmZhY2Vib29rLmZvcy5oZWFkZXJzdjIuZmI0YW9yY2EuSGVhZGVyc1YyQ29uZmlnRmV0Y2hSZXF1ZXN0SGFuZGxlciZhY2Nlc3NfdG9rZW49MzUwNjg1NTMxNzI4fDYyZjhjZTlmNzRiMTJmODRjMTIzY2MyMzQzN2E0YTMyJmZiX2FwaV9yZXFfZnJpZW5kbHlfbmFtZT1hdXRoZW50aWNhdGUmY3BsPXRydWUiLCBoZWFkZXJzPWhlYWRlcikudGV4dA0KCQkJCQkJCXEgPSBqc29uLmxvYWRzKGRhdGEpDQoJCQkJCQkJaWYgImFjY2Vzc190b2tlbiIgaW4gcSBhbmQgIkVBQUEiIGluIHE6DQoJCQkJCQkJCXByaW50KCIgXDAzM1sxOzMybSBbQ0hJR09aSUUtT0tdICIrdWlkKyIgfCAiK3Bhc3MzKyJcMDMzWzA7OTdtIikNCgkJCQkJCQkJb2sgPSBvcGVuKCJvay50eHQiLCAiYSIpDQoJCQkJCQkJCW9rLndyaXRlKHVpZCsifCIrcGFzczMrIlxuIikNCgkJCQkJCQkJb2suY2xvc2UoKQ0KCQkJCQkJCQlva3MuYXBwZW5kKHVpZCtwYXNzMykNCgkJCQkJCQllbHNlOg0KCQkJCQkJCQlpZiAid3d3LmZhY2Vib29rLmNvbSIgaW4gcVsiZXJyb3JfbXNnIl06DQoJCQkJCQkJCQlwcmludCgiIFwwMzNbMTszM20gW0NISUdPWklFLUNQXSAiK3VpZCsiIHwgIitwYXNzMysiXDAzM1swOzk3bSIpDQoJCQkJCQkJCQljcCA9IG9wZW4oImNwLnR4dCIsICJhIikNCgkJCQkJCQkJCWNwLndyaXRlKHVpZCsifCIrcGFzczMrIlxuIikNCgkJCQkJCQkJCWNwLmNsb3NlKCkNCgkJCQkJCQkJCWNwcy5hcHBlbmQodWlkK3Bhc3MzKQ0KCQkJCQkJCQllbHNlOg0KCQkJCQkJCQkJcGFzczQgPSBuYW1lLmxvd2VyKCkuc3BsaXQoJyAnKVswXSArICcxMjM0NScNCgkJCQkJCQkJCWRhdGEgPSBzZXNzaW9uLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/Zm9ybWF0PWpzb24mZW1haWw9Iit1aWQrIiZwYXNzd29yZD0iK3Bhc3M0KyImY3JlZGVudGlhbHNfdHlwZT1kZXZpY2VfYmFzZWRfbG9naW5fcGFzc3dvcmQmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmZXJyb3JfZGV0YWlsX3R5cGU9YnV0dG9uX3dpdGhfZGlzYWJsZWQmc291cmNlPWRldmljZV9iYXNlZF9sb2dpbiZtZXRhX2luZl9mYm1ldGE9JTIwJmN1cnJlbnRseV9sb2dnZWRfaW5fdXNlcmlkPTAmbWV0aG9kPUdFVCZsb2NhbGU9ZW5fVVMmY2xpZW50X2NvdW50cnlfY29kZT1VUyZmYl9hcGlfY2FsbGVyX2NsYXNzPWNvbS5mYWNlYm9vay5mb3MuaGVhZGVyc3YyLmZiNGFvcmNhLkhlYWRlcnNWMkNvbmZpZ0ZldGNoUmVxdWVzdEhhbmRsZXImYWNjZXNzX3Rva2VuPTM1MDY4NTUzMTcyOHw2MmY4Y2U5Zjc0YjEyZjg0YzEyM2NjMjM0MzdhNGEzMiZmYl9hcGlfcmVxX2ZyaWVuZGx5X25hbWU9YXV0aGVudGljYXRlJmNwbD10cnVlIiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJCQkJCQkJCXEgPSBqc29uLmxvYWRzKGRhdGEpDQoJCQkJCQkJCQlpZiAiYWNjZXNzX3Rva2VuIiBpbiBxIGFuZCAiRUFBQSIgaW4gcToNCgkJCQkJCQkJCQlwcmludCgiIFwwMzNbMTszMm0gW0NISUdPWklFLU9LXSAiK3VpZCsiIHwgIitwYXNzNCsiXDAzM1swOzk3bSIpDQoJCQkJCQkJCQkJb2sgPSBvcGVuKCJvay50eHQiLCAiYSIpDQoJCQkJCQkJCQkJb2sud3JpdGUodWlkKyJ8IitwYXNzNCsiXG4iKQ0KCQkJCQkJCQkJCW9rLmNsb3NlKCkNCgkJCQkJCQkJCQlva3MuYXBwZW5kKHVpZCtwYXNzNCkNCgkJCQkJCQkJCWVsc2U6DQoJCQkJCQkJCQkJaWYgInd3dy5mYWNlYm9vay5jb20iIGluIHFbImVycm9yX21zZyJdOg0KCQkJCQkJCQkJCQlwcmludCgiIFwwMzNbMTszM20gW0NISUdPWklFLUNQXSAiK3VpZCsiIHwgIitwYXNzNCsiXDAzM1swOzk3bSIpDQoJCQkJCQkJCQkJCWNwID0gb3BlbigiY3AudHh0IiwgImEiKQ0KCQkJCQkJCQkJCQljcC53cml0ZSh1aWQrInwiK3Bhc3M0KyJcbiIpDQoJCQkJCQkJCQkJCWNwLmNsb3NlKCkNCgkJCQkJCQkJCQkJY3BzLmFwcGVuZCh1aWQrcGFzczQpDQoJCQkJCQkJCQkJZWxzZToNCgkJCQkJCQkJCQkJcGFzczUgPSBuYW1lLmxvd2VyKCkuc3BsaXQoJyAnKVswXSArIG5hbWUubG93ZXIoKS5zcGxpdCgnICcpWzFdDQoJCQkJCQkJCQkJCWRhdGEgPSBzZXNzaW9uLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/Zm9ybWF0PWpzb24mZW1haWw9Iit1aWQrIiZwYXNzd29yZD0iK3Bhc3M1KyImY3JlZGVudGlhbHNfdHlwZT1kZXZpY2VfYmFzZWRfbG9naW5fcGFzc3dvcmQmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmZXJyb3JfZGV0YWlsX3R5cGU9YnV0dG9uX3dpdGhfZGlzYWJsZWQmc291cmNlPWRldmljZV9iYXNlZF9sb2dpbiZtZXRhX2luZl9mYm1ldGE9JTIwJmN1cnJlbnRseV9sb2dnZWRfaW5fdXNlcmlkPTAmbWV0aG9kPUdFVCZsb2NhbGU9ZW5fVVMmY2xpZW50X2NvdW50cnlfY29kZT1VUyZmYl9hcGlfY2FsbGVyX2NsYXNzPWNvbS5mYWNlYm9vay5mb3MuaGVhZGVyc3YyLmZiNGFvcmNhLkhlYWRlcnNWMkNvbmZpZ0ZldGNoUmVxdWVzdEhhbmRsZXImYWNjZXNzX3Rva2VuPTM1MDY4NTUzMTcyOHw2MmY4Y2U5Zjc0YjEyZjg0YzEyM2NjMjM0MzdhNGEzMiZmYl9hcGlfcmVxX2ZyaWVuZGx5X25hbWU9YXV0aGVudGljYXRlJmNwbD10cnVlIiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJCQkJCQkJCQkJcSA9IGpzb24ubG9hZHMoZGF0YSkNCgkJCQkJCQkJCQkJaWYgImFjY2Vzc190b2tlbiIgaW4gcSBhbmQgIkVBQUEiIGluIHE6DQoJCQkJCQkJCQkJCQlwcmludCgiIFwwMzNbMTszMm0gW0NISUdPWklFLU9LXSAiK3VpZCsiIHwgIitwYXNzNSsiXDAzM1swOzk3bSIpDQoJCQkJCQkJCQkJCQlvayA9IG9wZW4oIm9rLnR4dCIsICJhIikNCgkJCQkJCQkJCQkJCW9rLndyaXRlKHVpZCsifCIrcGFzczUrIlxuIikNCgkJCQkJCQkJCQkJCW9rLmNsb3NlKCkNCgkJCQkJCQkJCQkJCW9rcy5hcHBlbmQodWlkK3Bhc3M1KQ0KCQkJCQkJCQkJCQllbHNlOg0KCQkJCQkJCQkJCQkJaWYgInd3dy5mYWNlYm9vay5jb20iIGluIHFbImVycm9yX21zZyJdOg0KCQkJCQkJCQkJCQkJCXByaW50KCIgXDAzM1sxOzMzbSBbQ0hJR09aSUUtQ1BdICIrdWlkKyIgfCAiK3Bhc3M1KyJcMDMzWzA7OTdtIikNCgkJCQkJCQkJCQkJCQljcCA9IG9wZW4oImNwLnR4dCIsICJhIikNCgkJCQkJCQkJCQkJCQljcC53cml0ZSh1aWQrInwiK3Bhc3M1KyJcbiIpDQoJCQkJCQkJCQkJCQkJY3AuY2xvc2UoKQ0KCQkJCQkJCQkJCQkJCWNwcy5hcHBlbmQodWlkK3Bhc3M1KQ0KCQkJCQkJCQkJCQkJZWxzZToNCgkJCQkJCQkJCQkJCQlwYXNzNiA9IG5hbWUubG93ZXIoKQ0KCQkJCQkJCQkJCQkJCWRhdGEgPSBzZXNzaW9uLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/Zm9ybWF0PWpzb24mZW1haWw9Iit1aWQrIiZwYXNzd29yZD0iK3Bhc3M2KyImY3JlZGVudGlhbHNfdHlwZT1kZXZpY2VfYmFzZWRfbG9naW5fcGFzc3dvcmQmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmZXJyb3JfZGV0YWlsX3R5cGU9YnV0dG9uX3dpdGhfZGlzYWJsZWQmc291cmNlPWRldmljZV9iYXNlZF9sb2dpbiZtZXRhX2luZl9mYm1ldGE9JTIwJmN1cnJlbnRseV9sb2dnZWRfaW5fdXNlcmlkPTAmbWV0aG9kPUdFVCZsb2NhbGU9ZW5fVVMmY2xpZW50X2NvdW50cnlfY29kZT1VUyZmYl9hcGlfY2FsbGVyX2NsYXNzPWNvbS5mYWNlYm9vay5mb3MuaGVhZGVyc3YyLmZiNGFvcmNhLkhlYWRlcnNWMkNvbmZpZ0ZldGNoUmVxdWVzdEhhbmRsZXImYWNjZXNzX3Rva2VuPTM1MDY4NTUzMTcyOHw2MmY4Y2U5Zjc0YjEyZjg0YzEyM2NjMjM0MzdhNGEzMiZmYl9hcGlfcmVxX2ZyaWVuZGx5X25hbWU9YXV0aGVudGljYXRlJmNwbD10cnVlIiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJCQkJCQkJCQkJCQlxID0ganNvbi5sb2FkcyhkYXRhKQ0KCQkJCQkJCQkJCQkJCWlmICJhY2Nlc3NfdG9rZW4iIGluIHEgYW5kICJFQUFBIiBpbiBxOg0KCQkJCQkJCQkJCQkJCQlwcmludCgiIFwwMzNbMTszMm0gW0NISUdPWklFLU9LXSAiK3VpZCsiIHwgIitwYXNzNisiXDAzM1swOzk3bSIpDQoJCQkJCQkJCQkJCQkJCW9rID0gb3Blbigib2sudHh0IiwgImEiKQ0KCQkJCQkJCQkJCQkJCQlvay53cml0ZSh1aWQrInwiK3Bhc3M2KyJcbiIpDQoJCQkJCQkJCQkJCQkJCW9rLmNsb3NlKCkNCgkJCQkJCQkJCQkJCQkJb2tzLmFwcGVuZCh1aWQrcGFzczYpDQoJCQkJCQkJCQkJCQkJZWxzZToNCgkJCQkJCQkJCQkJCQkJaWYgInd3dy5mYWNlYm9vay5jb20iIGluIHFbImVycm9yX21zZyJdOg0KCQkJCQkJCQkJCQkJCQkJcHJpbnQoIiBcMDMzWzE7MzNtIFtDSElHT1pJRS1DUF0gIit1aWQrIiB8ICIrcGFzczYrIlwwMzNbMDs5N20iKQ0KCQkJCQkJCQkJCQkJCQkJY3AgPSBvcGVuKCJjcC50eHQiLCAiYSIpDQoJCQkJCQkJCQkJCQkJCQljcC53cml0ZSh1aWQrInwiK3Bhc3M2KyJcbiIpDQoJCQkJCQkJCQkJCQkJCQljcC5jbG9zZSgpDQoJCQkJCQkJCQkJCQkJCQljcHMuYXBwZW5kKHVpZCtwYXNzNikNCgkJCQkJCQkJCQkJCQkJZWxzZToNCgkJCQkJCQkJCQkJCQkJCXBhc3M3ID0gIjIyMzM0NCINCgkJCQkJCQkJCQkJCQkJCWRhdGEgPSBzZXNzaW9uLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/Zm9ybWF0PWpzb24mZW1haWw9Iit1aWQrIiZwYXNzd29yZD0iK3Bhc3M3KyImY3JlZGVudGlhbHNfdHlwZT1kZXZpY2VfYmFzZWRfbG9naW5fcGFzc3dvcmQmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmZXJyb3JfZGV0YWlsX3R5cGU9YnV0dG9uX3dpdGhfZGlzYWJsZWQmc291cmNlPWRldmljZV9iYXNlZF9sb2dpbiZtZXRhX2luZl9mYm1ldGE9JTIwJmN1cnJlbnRseV9sb2dnZWRfaW5fdXNlcmlkPTAmbWV0aG9kPUdFVCZsb2NhbGU9ZW5fVVMmY2xpZW50X2NvdW50cnlfY29kZT1VUyZmYl9hcGlfY2FsbGVyX2NsYXNzPWNvbS5mYWNlYm9vay5mb3MuaGVhZGVyc3YyLmZiNGFvcmNhLkhlYWRlcnNWMkNvbmZpZ0ZldGNoUmVxdWVzdEhhbmRsZXImYWNjZXNzX3Rva2VuPTM1MDY4NTUzMTcyOHw2MmY4Y2U5Zjc0YjEyZjg0YzEyM2NjMjM0MzdhNGEzMiZmYl9hcGlfcmVxX2ZyaWVuZGx5X25hbWU9YXV0aGVudGljYXRlJmNwbD10cnVlIiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJCQkJCQkJCQkJCQkJCXEgPSBqc29uLmxvYWRzKGRhdGEpDQoJCQkJCQkJCQkJCQkJCQlpZiAiYWNjZXNzX3Rva2VuIiBpbiBxIGFuZCAiRUFBQSIgaW4gcToNCgkJCQkJCQkJCQkJCQkJCQlwcmludCgiIFwwMzNbMTszMm0gW0NISUdPWklFLU9LXSAiK3VpZCsiIHwgIitwYXNzNysiXDAzM1swOzk3bSIpDQoJCQkJCQkJCQkJCQkJCQkJb2sgPSBvcGVuKCJvay50eHQiLCAiYSIpDQoJCQkJCQkJCQkJCQkJCQkJb2sud3JpdGUodWlkKyJ8IitwYXNzNysiXG4iKQ0KCQkJCQkJCQkJCQkJCQkJCW9rLmNsb3NlKCkNCgkJCQkJCQkJCQkJCQkJCQlva3MuYXBwZW5kKHVpZCtwYXNzNykNCgkJCQkJCQkJCQkJCQkJCWVsc2U6DQoJCQkJCQkJCQkJCQkJCQkJaWYgInd3dy5mYWNlYm9vay5jb20iIGluIHFbImVycm9yX21zZyJdOg0KCQkJCQkJCQkJCQkJCQkJCQlwcmludCgiIFwwMzNbMTszM20gW0NISUdPWklFLUNQXSAiK3VpZCsiIHwgIitwYXNzNysiXDAzM1swOzk3bSIpDQoJCQkJCQkJCQkJCQkJCQkJCWNwID0gb3BlbigiY3AudHh0IiwgImEiKQ0KCQkJCQkJCQkJCQkJCQkJCQljcC53cml0ZSh1aWQrInwiK3Bhc3M3KyJcbiIpDQoJCQkJCQkJCQkJCQkJCQkJCWNwLmNsb3NlKCkNCgkJCQkJCQkJCQkJCQkJCQkJY3BzLmFwcGVuZCh1aWQrcGFzczcpDQoJCQkJCQkJCQkJCQkJCQkJZWxzZToNCgkJCQkJCQkJCQkJCQkJCQkJcGFzczggPSBuYW1lLmxvd2VyKCkuc3BsaXQoJyAnKVsxXSArICcxMjMnDQoJCQkJCQkJCQkJCQkJCQkJCWRhdGEgPSBzZXNzaW9uLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/Zm9ybWF0PWpzb24mZW1haWw9Iit1aWQrIiZwYXNzd29yZD0iK3Bhc3M4KyImY3JlZGVudGlhbHNfdHlwZT1kZXZpY2VfYmFzZWRfbG9naW5fcGFzc3dvcmQmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmZXJyb3JfZGV0YWlsX3R5cGU9YnV0dG9uX3dpdGhfZGlzYWJsZWQmc291cmNlPWRldmljZV9iYXNlZF9sb2dpbiZtZXRhX2luZl9mYm1ldGE9JTIwJmN1cnJlbnRseV9sb2dnZWRfaW5fdXNlcmlkPTAmbWV0aG9kPUdFVCZsb2NhbGU9ZW5fVVMmY2xpZW50X2NvdW50cnlfY29kZT1VUyZmYl9hcGlfY2FsbGVyX2NsYXNzPWNvbS5mYWNlYm9vay5mb3MuaGVhZGVyc3YyLmZiNGFvcmNhLkhlYWRlcnNWMkNvbmZpZ0ZldGNoUmVxdWVzdEhhbmRsZXImYWNjZXNzX3Rva2VuPTM1MDY4NTUzMTcyOHw2MmY4Y2U5Zjc0YjEyZjg0YzEyM2NjMjM0MzdhNGEzMiZmYl9hcGlfcmVxX2ZyaWVuZGx5X25hbWU9YXV0aGVudGljYXRlJmNwbD10cnVlIiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJCQkJCQkJCQkJCQkJCQkJcSA9IGpzb24ubG9hZHMoZGF0YSkNCgkJCQkJCQkJCQkJCQkJCQkJaWYgImFjY2Vzc190b2tlbiIgaW4gcSBhbmQgIkVBQUEiIGluIHE6DQoJCQkJCQkJCQkJCQkJCQkJCQlwcmludCgiIFwwMzNbMTszMm0gW0NISUdPWklFLU9LXSAiK3VpZCsiIHwgIitwYXNzOCsiXDAzM1swOzk3bSIpDQoJCQkJCQkJCQkJCQkJCQkJCQlvayA9IG9wZW4oIm9rLnR4dCIsICJhIikNCgkJCQkJCQkJCQkJCQkJCQkJCW9rLndyaXRlKHVpZCsifCIrcGFzczgrIlxuIikNCgkJCQkJCQkJCQkJCQkJCQkJCW9rLmNsb3NlKCkNCgkJCQkJCQkJCQkJCQkJCQkJCW9rcy5hcHBlbmQodWlkK3Bhc3M4KQ0KCQkJCQkJCQkJCQkJCQkJCQllbHNlOg0KCQkJCQkJCQkJCQkJCQkJCQkJaWYgInd3dy5mYWNlYm9vay5jb20iIGluIHFbImVycm9yX21zZyJdOg0KCQkJCQkJCQkJCQkJCQkJCQkJCXByaW50KCIgXDAzM1sxOzMzbSBbQ0hJR09aSUUtQ1BdICIrdWlkKyIgfCAiK3Bhc3M4KyJcMDMzWzA7OTdtIikNCgkJCQkJCQkJCQkJCQkJCQkJCQljcCA9IG9wZW4oImNwLnR4dCIsICJhIikNCgkJCQkJCQkJCQkJCQkJCQkJCQljcC53cml0ZSh1aWQrInwiK3Bhc3M4KyJcbiIpDQoJCQkJCQkJCQkJCQkJCQkJCQkJY3AuY2xvc2UoKQ0KCQkJCQkJCQkJCQkJCQkJCQkJCWNwcy5hcHBlbmQodWlkK3Bhc3M4KQ0KCQkJCQkJCQkJCQkJDQoJCQkJCQkJCQkJDQoJCQkJCQkJCQkJDQoJCWV4Y2VwdDoNCgkJCXBhc3MNCglwID0gVGhyZWFkUG9vbCgzMCkNCglwLm1hcChtYWluLCBpZCkNCglwcmludCgiIikNCglsaW5leCgpDQoJcHJpbnQoIiIpDQoJcHJpbnQoIlwwMzNbOTI7MW0gVEhFIFBST0NFU1MgSEFTIEJFRU4gQ09NUExFVEVEIikNCglwcmludCgiXDAzM1s5MzsxbSBUT1RBTCBcMDMzWzkyOzFtT0tcMDMzWzkzOzFtL1wwMzNbOTE7MW1DUDogIitzdHIobGVuKG9rcykpKyIvIitzdHIobGVuKGNwcykpKQ0KCXByaW50KCIiKQ0KCWxpbmV4KCkNCglwcmludCgiIikNCglyYXdfaW5wdXQoIlwwMzNbOTM7MW0gUFJFU1MgRU5URVIgVE8gQkFDSyAiKQ0KCW1lbnUoKQ0KCQ0KIyMjIyMjDQoNCmRlZiBjcmFjaygpOg0KCWdsb2JhbCB0b2tlbg0KCW9zLnN5c3RlbSgiY2xlYXIiKQ0KCXRyeToNCgkJdG9rZW4gPSBvcGVuKCJ2YXVfdG9rZW4udHh0IiwiciIpLnJlYWQoKQ0KCWV4Y2VwdCBJT0Vycm9yOg0KCQlwcmludCgiIikNCgkJcHJpbnQoIlx0XDAzM1s5MTsxbSAgVE9LRU4gTk9UIEZPVU5EICIpDQoJCXRpbWUuc2xlZXAoMSkNCgkJdG9rZW4oKQ0KCW9zLnN5c3RlbSgiY2xlYXIiKQ0KCWxvZ28oKQ0KCXByaW50KCIiKQ0KCXByaW50KCJcdFwwMzNbOTM7MW0gIE1BTlVBTCBQQVNTIENSQUNLSU5HIikNCglwcmludCgiIikNCglwcmludCgiXDAzM1s5NDsxbSAgWzFdIENSQUNLIFBVQkxJQyBJRCIpDQoJcHJpbnQoIlwwMzNbOTM7MW0gIFsyXSBDUkFDSyBGT0xMT1dFUlMiKQ0KCXByaW50KCJcMDMzWzkyOzFtICBbM10gQ1JBQ0sgRklMRSIpDQoJcHJpbnQoIiIpDQoJY3JhY2tfc2VsZWN0KCkNCg0KZGVmIGNyYWNrX3NlbGVjdCgpOg0KCXNlbGVjdCA9IHJhd19pbnB1dCgiXDAzM1s5MjsxbSAgQ0hPT1NFIE9QSU5JT046ICIpDQoJaWQ9W10NCglva3M9W10NCgljcHM9W10NCglpZiBzZWxlY3QgPT0iMSI6DQoJCW9zLnN5c3RlbSgiY2xlYXIiKQ0KCQlsb2dvKCkNCgkJcHJpbnQoIiIpDQoJCXByaW50KCJcdFwwMzNbOTM7MW0gIE1BTlVBTCBQQVNTIENSQUNLSU5HIikNCgkJcHJpbnQoIiIpDQoJCXByaW50KCJcMDMzWzkzOzFtICBFWEFNUExFIDpcMDMzWzk2OzFtIDEyLCAxMTIyLCAxMTIsIDEyMzQsIDc4NiBFVEMiKQ0KCQlwcmludCgiIikNCgkJaWR0ID0gcmF3X2lucHV0KCJcblwwMzNbOTI7MW0gIElOUFVUIFBVQkxJQyBJRCA6ICIpDQoJCXByaW50KCIiKQ0KCQlwMSA9IHJhd19pbnB1dCgiXDAzM1s5MjsxbSAgTkFNRSArIERJR0lUIFBBU1NXT1JEIDE6ICIpDQoJCXAyID0gcmF3X2lucHV0KCJcMDMzWzkzOzFtICBOQU1FICsgRElHSVQgUEFTU1dPUkQgMjogIikNCgkJcDMgPSByYXdfaW5wdXQoIlwwMzNbOTQ7MW0gIE5BTUUgKyBESUdJVCBQQVNTV09SRCAzOiAiKQ0KCQlwNCA9IHJhd19pbnB1dCgiXDAzM1s5NTsxbSAgTkFNRSArIERJR0lUIFBBU1NXT1JEIDQ6ICIpDQoJCXByaW50KCIiKQ0KCQlwcmludCgiXDAzM1s5MzsxbSAgRVhBTVBMRSA6XDAzM1s5NjsxbSAxMDIwMzAsIDIyMzM0NCwgNTU2Njc3LCA3ODY3ODYgRVRDICIpDQoJCXByaW50KCIiKQ0KCQlwYXNzNSA9IHJhd19pbnB1dCgiXDAzM1s5MjsxbSAgUEFTU1dPUkQgNTogIikNCgkJcGFzczYgPSByYXdfaW5wdXQoIlwwMzNbOTM7MW0gIFBBU1NXT1JEIDY6ICIpDQoJCXBhc3M3ID0gcmF3X2lucHV0KCJcMDMzWzk0OzFtICBQQVNTV09SRCA3OiAiKQ0KCQl0cnk6DQoJCQlyID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK2lkdCsiP2FjY2Vzc190b2tlbj0iK3Rva2VuKQ0KCQkJcSA9IGpzb24ubG9hZHMoci50ZXh0KQ0KCQkJb3Muc3lzdGVtKCdjbGVhcicpDQoJCQlsb2dvKCkNCgkJCXByaW50KCcnKQ0KCQkJcHJpbnQoIlx0XDAzM1s5MzsxbSAgTUFOVUFMIFBBU1MgQ1JBQ0tJTkciKQ0KCQkJcHJpbnQoJycpDQoJCQlwcmludCgiXDAzM1s5MjsxbSAgQ09JTklORyBGUk9NIDogIitxWyJuYW1lIl0pDQoJCWV4Y2VwdCBLZXlFcnJvcjoNCgkJCXByaW50KCJcdFwwMzNbOTE7MW0gIElOVkFMSUQgTElOSyBPUiBUT0tFTiIpDQoJCQlwcmludCgiIikNCgkJCXJhd19pbnB1dCgiIFBSRVNTIEVOVEVSIFRPIEJBQ0siKQ0KCQkJY3JhY2soKQ0KCQlyID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8iK2lkdCsiL2ZyaWVuZHM/YWNjZXNzX3Rva2VuPSIrdG9rZW4pDQoJCXogPSBqc29uLmxvYWRzKHIudGV4dCkNCgkJZm9yIGkgaW4gelsiZGF0YSJdOg0KCQkJdWlkID0gaVsiaWQiXQ0KCQkJbmEgPSBpWyJuYW1lIl0NCgkJCWlkLmFwcGVuZCh1aWQrInwiK25hKQ0KCWVsaWYgc2VsZWN0ID09IjIiOg0KCQlvcy5zeXN0ZW0oImNsZWFyIikNCgkJbG9nbygpDQoJCXByaW50KCIiKQ0KCQlwcmludCgiXHRcMDMzWzkzOzFtICBNQU5VQUwgUEFTUyBDUkFDS0lORyIpDQoJCXByaW50KCIiKQ0KCQlwcmludCgiXDAzM1s5MzsxbSAgRVhBTVBMRSA6XDAzM1s5NjsxbSAxMiwgMTEyMiwgMzIxLCAxMjM0LCA3ODYgRVRDIikNCgkJcHJpbnQoIiIpDQoJCWlkdCA9IHJhd19pbnB1dCgiXG5cMDMzWzkyOzFtICBJTlBVVCBQVUJMSUMgRk9MTE9XRVIgSUQgOiAiKQ0KCQlwcmludCgiIikNCgkJcDEgPSByYXdfaW5wdXQoIlwwMzNbOTI7MW0gIE5BTUUgKyBESUdJVCBQQVNTV09SRCAxOiAiKQ0KCQlwMiA9IHJhd19pbnB1dCgiXDAzM1s5MzsxbSAgTkFNRSArIERJR0lUIFBBU1NXT1JEIDI6ICIpDQoJCXAzID0gcmF3X2lucHV0KCJcMDMzWzk0OzFtICBOQU1FICsgRElHSVQgUEFTU1dPUkQgMzogIikNCgkJcDQgPSByYXdfaW5wdXQoIlwwMzNbOTU7MW0gIE5BTUUgKyBESUdJVCBQQVNTV09SRCA0OiAiKQ0KCQlwcmludCgiIikNCgkJcHJpbnQoIlwwMzNbOTM7MW0gIEVYQU1QTEUgOlwwMzNbOTY7MW0gMTAyMDMwLCAyMjMzNDQsIDU1NjY3NywgNzg2Nzg2IEVUQyAiKQ0KCQlwcmludCgiIikNCgkJcGFzczUgPSByYXdfaW5wdXQoIlwwMzNbOTI7MW0gIFBBU1NXT1JEIDU6ICIpDQoJCXBhc3M2ID0gcmF3X2lucHV0KCJcMDMzWzkzOzFtICBQQVNTV09SRCA2OiAiKQ0KCQlwYXNzNyA9IHJhd19pbnB1dCgiXDAzM1s5NDsxbSAgUEFTU1dPUkQgNzogIikNCgkJdHJ5Og0KCQkJciA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIitpZHQrIj9hY2Nlc3NfdG9rZW49Iit0b2tlbikNCgkJCXEgPSBqc29uLmxvYWRzKHIudGV4dCkNCgkJCW9zLnN5c3RlbSgnY2xlYXInKQ0KCQkJbG9nbygpDQoJCQlwcmludCgnJykNCgkJCXByaW50KCJcdFwwMzNbOTM7MW0gIE1BTlVBTCBQQVNTIENSQUNLSU5HIikNCgkJCXByaW50KCcnKQ0KCQkJcHJpbnQoIlwwMzNbOTI7MW0gIENPSU5JTkcgRlJPTSA6ICIrcVsibmFtZSJdKQ0KCQlleGNlcHQgS2V5RXJyb3I6DQoJCQlwcmludCgiXHRcMDMzWzkxOzFtICAgICBJTlZBTElEIExJTksgT1IgVE9LRU4iKQ0KCQkJcHJpbnQoIiIpDQoJCQlyYXdfaW5wdXQoIlwwMzNbOTE7MW0gUFJFU1MgRU5URVIgVE8gQkFDSyIpDQoJCQljcmFjaygpDQoJCXIgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLyIraWR0KyIvc3Vic2NyaWJlcnM/YWNjZXNzX3Rva2VuPSIrdG9rZW4rIiZsaW1pdD05OTk5OTkiKQ0KCQl6ID0ganNvbi5sb2FkcyhyLnRleHQpDQoJCWZvciBpIGluIHpbImRhdGEiXToNCgkJCXVpZCA9IGlbImlkIl0NCgkJCW5hID0gaVsibmFtZSJdDQoJCQlpZC5hcHBlbmQodWlkKyJ8IituYSkNCgllbGlmIHNlbGVjdCA9PSIzIjoNCgkJb3Muc3lzdGVtKCJjbGVhciIpDQoJCWxvZ28oKQ0KCQlwcmludCgiIikNCgkJcHJpbnQoIlx0XDAzM1s5MzsxbSAgTUFOVUFMIFBBU1MgQ1JBQ0tJTkciKQ0KCQlwcmludCgiIikNCgkJcHJpbnQoIiIpDQogICAgICAgICAgICAgICAgZmlsZWxpc3QgPSByYXdfaW5wdXQoJ1wwMzNbOTI7MW0gIElOUFVUIEZJTEU6ICcpDQoJCXRyeToNCgkJCWZvciBsaW5lIGluIG9wZW4oZmlsZWxpc3QsICdyJykucmVhZGxpbmVzKCk6DQoJCQkJaWQuYXBwZW5kKGxpbmUuc3RyaXAoKSkNCgkJZXhjZXB0IElPRXJyb3I6DQoJCQlwcmludCgiXHRcMDMzWzkxOzFtICBSRVFVRVNURUQgRklMRSBOT1QgRk9VTkQiKQ0KCQkJcHJpbnQoIiIpDQoJCQlyYXdfaW5wdXQoIlwwMzNbOTM7MW0gUFJFU1MgRU5URVIgVE8gQkFDSyIpDQoJCQljcmFjaygpDQoJCXByaW50KCJcMDMzWzkzOzFtICBFWEFNUExFIDpcMDMzWzk2OzFtIDEyLCAxMTIyLCAzMjEsIDEyMzQsIDc4NiBFVEMiKQ0KCQlwcmludCgiIikNCgkJcDEgPSByYXdfaW5wdXQoIlwwMzNbOTI7MW0gIE5BTUUgKyBESUdJVCBQQVNTV09SRCAxOiAiKQ0KCQlwMiA9IHJhd19pbnB1dCgiXDAzM1s5MzsxbSAgTkFNRSArIERJR0lUIFBBU1NXT1JEIDI6ICIpDQoJCXAzID0gcmF3X2lucHV0KCJcMDMzWzk0OzFtICBOQU1FICsgRElHSVQgUEFTU1dPUkQgMzogIikNCgkJcDQgPSByYXdfaW5wdXQoIlwwMzNbOTU7MW0gIE5BTUUgKyBESUdJVCBQQVNTV09SRCA0OiAiKQ0KCQlwcmludCgiIikNCgkJcHJpbnQoIlwwMzNbOTM7MW0gIEVYQU1QTEUgOlwwMzNbOTY7MW0gMTAyMDMwLCAyMjMzNDQsIDU1NjY3NywgNzg2Nzg2IEVUQyAiKQ0KCQlwcmludCgiIikNCgkJcGFzczUgPSByYXdfaW5wdXQoIlwwMzNbOTI7MW0gIFBBU1NXT1JEIDU6ICIpDQoJCXBhc3M2ID0gcmF3X2lucHV0KCJcMDMzWzkzOzFtICBQQVNTV09SRCA2OiAiKQ0KCQlwYXNzNyA9IHJhd19pbnB1dCgiXDAzM1s5NDsxbSAgUEFTU1dPUkQgNzogIikNCgkJDQoJZWxpZiBzZWxlY3QgPT0iMCI6DQoJICAgIG1lbnUoKQ0KCWVsc2U6DQoJCXByaW50KCIiKQ0KCQlwcmludCgiXHRcMDMzWzkxOzFtICBTRUxFQ1QgVkFMSUQgT1BUSU9OIikNCgkJcHJpbnQoIiIpDQoJCWNyYWNrX3NlbGVjdCgpDQoJcHJpbnQoIiIpDQoJcHJpbnQoIlwwMzNbOTM7MW0gIFRPVEFMIElEUyA6IFwwMzNbOTI7MW0iK3N0cihsZW4oaWQpKSkNCglwcmludCgiXDAzM1s5MzsxbSAgVEhFIFBST0NFU1MgSEFTIFNUQVJURUQiKQ0KCXByaW50KCJcMDMzWzkyOzFtICBLQVJNQSBDTE9OSU5HIEFDVElWQVRFRFx4MWJbMG0iKQ0KCXByaW50KCIiKQ0KCWxpbmV4KCkNCglwcmludCgiIikNCglkZWYgbWFpbihhcmcpOg0KCQl1c2VyPWFyZw0KCQl1aWQsbmFtZT11c2VyLnNwbGl0KCJ8IikNCgkJdmF1Z2VudCA9IHJhbmRvbS5jaG9pY2UoYWdlbnRzKQ0KCQlzZXNzaW9uID0gcmVxdWVzdHMuU2Vzc2lvbigpDQoJCXNlc3Npb24uaGVhZGVycy51cGRhdGUoeydVc2VyLUFnZW50JzogdmF1Z2VudH0pDQoJCXRyeToNCgkJCXBhc3MxID0gbmFtZS5sb3dlcigpLnNwbGl0KCcgJylbMF0rcDENCgkJCWRhdGEgPSBzZXNzaW9uLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/Zm9ybWF0PWpzb24mZW1haWw9Iit1aWQrIiZwYXNzd29yZD0iK3Bhc3MxKyImY3JlZGVudGlhbHNfdHlwZT1kZXZpY2VfYmFzZWRfbG9naW5fcGFzc3dvcmQmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmZXJyb3JfZGV0YWlsX3R5cGU9YnV0dG9uX3dpdGhfZGlzYWJsZWQmc291cmNlPWRldmljZV9iYXNlZF9sb2dpbiZtZXRhX2luZl9mYm1ldGE9JTIwJmN1cnJlbnRseV9sb2dnZWRfaW5fdXNlcmlkPTAmbWV0aG9kPUdFVCZsb2NhbGU9ZW5fVVMmY2xpZW50X2NvdW50cnlfY29kZT1VUyZmYl9hcGlfY2FsbGVyX2NsYXNzPWNvbS5mYWNlYm9vay5mb3MuaGVhZGVyc3YyLmZiNGFvcmNhLkhlYWRlcnNWMkNvbmZpZ0ZldGNoUmVxdWVzdEhhbmRsZXImYWNjZXNzX3Rva2VuPTM1MDY4NTUzMTcyOHw2MmY4Y2U5Zjc0YjEyZjg0YzEyM2NjMjM0MzdhNGEzMiZmYl9hcGlfcmVxX2ZyaWVuZGx5X25hbWU9YXV0aGVudGljYXRlJmNwbD10cnVlIiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJCXEgPSBqc29uLmxvYWRzKGRhdGEpDQoJCQlpZiAiYWNjZXNzX3Rva2VuIiBpbiBxIGFuZCAiRUFBQSIgaW4gcToNCgkJCQlwcmludCgiIFwwMzNbMTszMm0gW0NISUdPWklFLU9LXSAiK3VpZCsiIHwgIitwYXNzMSsiXDAzM1swOzk3bSIpDQoJCQkJb2sgPSBvcGVuKCJvay50eHQiLCAiYSIpDQoJCQkJb2sud3JpdGUodWlkKyJ8IitwYXNzMSsiXG4iKQ0KCQkJCW9rLmNsb3NlKCkNCgkJCQlva3MuYXBwZW5kKHVpZCtwYXNzMSkNCgkJCWVsc2U6DQoJCQkJaWYgInd3dy5mYWNlYm9vay5jb20iIGluIHFbImVycm9yX21zZyJdOg0KCQkJCQlwcmludCgiIFwwMzNbMTszM20gW0NISUdPWklFLUNQXSAiK3VpZCsiIHwgIitwYXNzMSsiXDAzM1swOzk3bSIpDQoJCQkJCWNwID0gb3BlbigiY3AudHh0IiwgImEiKQ0KCQkJCQljcC53cml0ZSh1aWQrInwiK3Bhc3MxKyJcbiIpDQoJCQkJCWNwLmNsb3NlKCkNCgkJCQkJY3BzLmFwcGVuZCh1aWQrcGFzczEpDQoJCQkJZWxzZToNCgkJCQkJcGFzczIgPSBuYW1lLmxvd2VyKCkuc3BsaXQoJyAnKVswXStwMg0KCQkJCQlkYXRhID0gc2Vzc2lvbi5nZXQoImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2Zvcm1hdD1qc29uJmVtYWlsPSIrdWlkKyImcGFzc3dvcmQ9IitwYXNzMisiJmNyZWRlbnRpYWxzX3R5cGU9ZGV2aWNlX2Jhc2VkX2xvZ2luX3Bhc3N3b3JkJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJmVycm9yX2RldGFpbF90eXBlPWJ1dHRvbl93aXRoX2Rpc2FibGVkJnNvdXJjZT1kZXZpY2VfYmFzZWRfbG9naW4mbWV0YV9pbmZfZmJtZXRhPSUyMCZjdXJyZW50bHlfbG9nZ2VkX2luX3VzZXJpZD0wJm1ldGhvZD1HRVQmbG9jYWxlPWVuX1VTJmNsaWVudF9jb3VudHJ5X2NvZGU9VVMmZmJfYXBpX2NhbGxlcl9jbGFzcz1jb20uZmFjZWJvb2suZm9zLmhlYWRlcnN2Mi5mYjRhb3JjYS5IZWFkZXJzVjJDb25maWdGZXRjaFJlcXVlc3RIYW5kbGVyJmFjY2Vzc190b2tlbj0zNTA2ODU1MzE3Mjh8NjJmOGNlOWY3NGIxMmY4NGMxMjNjYzIzNDM3YTRhMzImZmJfYXBpX3JlcV9mcmllbmRseV9uYW1lPWF1dGhlbnRpY2F0ZSZjcGw9dHJ1ZSIsIGhlYWRlcnM9aGVhZGVyKS50ZXh0DQoJCQkJCXEgPSBqc29uLmxvYWRzKGRhdGEpDQoJCQkJCWlmICJhY2Nlc3NfdG9rZW4iIGluIHEgYW5kICJFQUFBIiBpbiBxOg0KCQkJCQkJcHJpbnQoIiBcMDMzWzE7MzJtIFtDSElHT1pJRS1PS10gIit1aWQrIiB8ICIrcGFzczIrIlwwMzNbMDs5N20iKQ0KCQkJCQkJb2sgPSBvcGVuKCJvay50eHQiLCAiYSIpDQoJCQkJCQlvay53cml0ZSh1aWQrInwiK3Bhc3MyKyJcbiIpDQoJCQkJCQlvay5jbG9zZSgpDQoJCQkJCQlva3MuYXBwZW5kKHVpZCtwYXNzMikNCgkJCQkJZWxzZToNCgkJCQkJCWlmICJ3d3cuZmFjZWJvb2suY29tIiBpbiBxWyJlcnJvcl9tc2ciXToNCgkJCQkJCQlwcmludCgiIFwwMzNbMTszM20gW0NISUdPWklFLUNQXSAiK3VpZCsiIHwgIitwYXNzMisiXDAzM1swOzk3bSIpDQoJCQkJCQkJY3AgPSBvcGVuKCJjcC50eHQiLCAiYSIpDQoJCQkJCQkJY3Aud3JpdGUodWlkKyJ8IitwYXNzMisiXG4iKQ0KCQkJCQkJCWNwLmNsb3NlKCkNCgkJCQkJCQljcHMuYXBwZW5kKHVpZCtwYXNzMikNCgkJCQkJCWVsc2U6DQoJCQkJCQkJcGFzczMgPSBuYW1lLmxvd2VyKCkuc3BsaXQoJyAnKVswXStwMw0KCQkJCQkJCWRhdGEgPSBzZXNzaW9uLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/Zm9ybWF0PWpzb24mZW1haWw9Iit1aWQrIiZwYXNzd29yZD0iK3Bhc3MzKyImY3JlZGVudGlhbHNfdHlwZT1kZXZpY2VfYmFzZWRfbG9naW5fcGFzc3dvcmQmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmZXJyb3JfZGV0YWlsX3R5cGU9YnV0dG9uX3dpdGhfZGlzYWJsZWQmc291cmNlPWRldmljZV9iYXNlZF9sb2dpbiZtZXRhX2luZl9mYm1ldGE9JTIwJmN1cnJlbnRseV9sb2dnZWRfaW5fdXNlcmlkPTAmbWV0aG9kPUdFVCZsb2NhbGU9ZW5fVVMmY2xpZW50X2NvdW50cnlfY29kZT1VUyZmYl9hcGlfY2FsbGVyX2NsYXNzPWNvbS5mYWNlYm9vay5mb3MuaGVhZGVyc3YyLmZiNGFvcmNhLkhlYWRlcnNWMkNvbmZpZ0ZldGNoUmVxdWVzdEhhbmRsZXImYWNjZXNzX3Rva2VuPTM1MDY4NTUzMTcyOHw2MmY4Y2U5Zjc0YjEyZjg0YzEyM2NjMjM0MzdhNGEzMiZmYl9hcGlfcmVxX2ZyaWVuZGx5X25hbWU9YXV0aGVudGljYXRlJmNwbD10cnVlIiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJCQkJCQlxID0ganNvbi5sb2FkcyhkYXRhKQ0KCQkJCQkJCWlmICJhY2Nlc3NfdG9rZW4iIGluIHEgYW5kICJFQUFBIiBpbiBxOg0KCQkJCQkJCQlwcmludCgiIFwwMzNbMTszMm0gW0NISUdPWklFLU9LXSAiK3VpZCsiIHwgIitwYXNzMysiXDAzM1swOzk3bSIpDQoJCQkJCQkJCW9rID0gb3Blbigib2sudHh0IiwgImEiKQ0KCQkJCQkJCQlvay53cml0ZSh1aWQrInwiK3Bhc3MzKyJcbiIpDQoJCQkJCQkJCW9rLmNsb3NlKCkNCgkJCQkJCQkJb2tzLmFwcGVuZCh1aWQrcGFzczMpDQoJCQkJCQkJZWxzZToNCgkJCQkJCQkJaWYgInd3dy5mYWNlYm9vay5jb20iIGluIHFbImVycm9yX21zZyJdOg0KCQkJCQkJCQkJcHJpbnQoIiBcMDMzWzE7MzNtIFtDSElHT1pJRS1DUF0gIit1aWQrIiB8ICIrcGFzczMrIlwwMzNbMDs5N20iKQ0KCQkJCQkJCQkJY3AgPSBvcGVuKCJjcC50eHQiLCAiYSIpDQoJCQkJCQkJCQljcC53cml0ZSh1aWQrInwiK3Bhc3MzKyJcbiIpDQoJCQkJCQkJCQljcC5jbG9zZSgpDQoJCQkJCQkJCQljcHMuYXBwZW5kKHVpZCtwYXNzMykNCgkJCQkJCQkJZWxzZToNCgkJCQkJCQkJCXBhc3M0ID0gbmFtZS5sb3dlcigpLnNwbGl0KCcgJylbMF0rcDQNCgkJCQkJCQkJCWRhdGEgPSBzZXNzaW9uLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/Zm9ybWF0PWpzb24mZW1haWw9Iit1aWQrIiZwYXNzd29yZD0iK3Bhc3M0KyImY3JlZGVudGlhbHNfdHlwZT1kZXZpY2VfYmFzZWRfbG9naW5fcGFzc3dvcmQmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmZXJyb3JfZGV0YWlsX3R5cGU9YnV0dG9uX3dpdGhfZGlzYWJsZWQmc291cmNlPWRldmljZV9iYXNlZF9sb2dpbiZtZXRhX2luZl9mYm1ldGE9JTIwJmN1cnJlbnRseV9sb2dnZWRfaW5fdXNlcmlkPTAmbWV0aG9kPUdFVCZsb2NhbGU9ZW5fVVMmY2xpZW50X2NvdW50cnlfY29kZT1VUyZmYl9hcGlfY2FsbGVyX2NsYXNzPWNvbS5mYWNlYm9vay5mb3MuaGVhZGVyc3YyLmZiNGFvcmNhLkhlYWRlcnNWMkNvbmZpZ0ZldGNoUmVxdWVzdEhhbmRsZXImYWNjZXNzX3Rva2VuPTM1MDY4NTUzMTcyOHw2MmY4Y2U5Zjc0YjEyZjg0YzEyM2NjMjM0MzdhNGEzMiZmYl9hcGlfcmVxX2ZyaWVuZGx5X25hbWU9YXV0aGVudGljYXRlJmNwbD10cnVlIiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJCQkJCQkJCXEgPSBqc29uLmxvYWRzKGRhdGEpDQoJCQkJCQkJCQlpZiAiYWNjZXNzX3Rva2VuIiBpbiBxIGFuZCAiRUFBQSIgaW4gcToNCgkJCQkJCQkJCQlwcmludCgiIFwwMzNbMTszMm0gW0NISUdPWklFLU9LXSAiK3VpZCsiIHwgIitwYXNzNCsiXDAzM1swOzk3bSIpDQoJCQkJCQkJCQkJb2sgPSBvcGVuKCJvay50eHQiLCAiYSIpDQoJCQkJCQkJCQkJb2sud3JpdGUodWlkKyJ8IitwYXNzNCsiXG4iKQ0KCQkJCQkJCQkJCW9rLmNsb3NlKCkNCgkJCQkJCQkJCQlva3MuYXBwZW5kKHVpZCtwYXNzNCkNCgkJCQkJCQkJCWVsc2U6DQoJCQkJCQkJCQkJaWYgInd3dy5mYWNlYm9vay5jb20iIGluIHFbImVycm9yX21zZyJdOg0KCQkJCQkJCQkJCQlwcmludCgiIFwwMzNbMTszM20gW0NISUdPWklFLUNQXSAiK3VpZCsiIHwgIitwYXNzNCsiXDAzM1swOzk3bSIpDQoJCQkJCQkJCQkJCWNwID0gb3BlbigiY3AudHh0IiwgImEiKQ0KCQkJCQkJCQkJCQljcC53cml0ZSh1aWQrInwiK3Bhc3M0KyJcbiIpDQoJCQkJCQkJCQkJCWNwLmNsb3NlKCkNCgkJCQkJCQkJCQkJY3BzLmFwcGVuZCh1aWQrcGFzczQpDQoJCQkJCQkJCQkJZWxzZToNCgkJCQkJCQkJCQkJZGF0YSA9IHNlc3Npb24uZ2V0KCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9mb3JtYXQ9anNvbiZlbWFpbD0iK3VpZCsiJnBhc3N3b3JkPSIrcGFzczUrIiZjcmVkZW50aWFsc190eXBlPWRldmljZV9iYXNlZF9sb2dpbl9wYXNzd29yZCZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZlcnJvcl9kZXRhaWxfdHlwZT1idXR0b25fd2l0aF9kaXNhYmxlZCZzb3VyY2U9ZGV2aWNlX2Jhc2VkX2xvZ2luJm1ldGFfaW5mX2ZibWV0YT0lMjAmY3VycmVudGx5X2xvZ2dlZF9pbl91c2VyaWQ9MCZtZXRob2Q9R0VUJmxvY2FsZT1lbl9VUyZjbGllbnRfY291bnRyeV9jb2RlPVVTJmZiX2FwaV9jYWxsZXJfY2xhc3M9Y29tLmZhY2Vib29rLmZvcy5oZWFkZXJzdjIuZmI0YW9yY2EuSGVhZGVyc1YyQ29uZmlnRmV0Y2hSZXF1ZXN0SGFuZGxlciZhY2Nlc3NfdG9rZW49MzUwNjg1NTMxNzI4fDYyZjhjZTlmNzRiMTJmODRjMTIzY2MyMzQzN2E0YTMyJmZiX2FwaV9yZXFfZnJpZW5kbHlfbmFtZT1hdXRoZW50aWNhdGUmY3BsPXRydWUiLCBoZWFkZXJzPWhlYWRlcikudGV4dA0KCQkJCQkJCQkJCQlxID0ganNvbi5sb2FkcyhkYXRhKQ0KCQkJCQkJCQkJCQlpZiAiYWNjZXNzX3Rva2VuIiBpbiBxIGFuZCAiRUFBQSIgaW4gcToNCgkJCQkJCQkJCQkJCXByaW50KCIgXDAzM1sxOzMybSBbQ0hJR09aSUUtT0tdICIrdWlkKyIgfCAiK3Bhc3M1KyJcMDMzWzA7OTdtIikNCgkJCQkJCQkJCQkJCW9rID0gb3Blbigib2sudHh0IiwgImEiKQ0KCQkJCQkJCQkJCQkJb2sud3JpdGUodWlkKyJ8IitwYXNzNSsiXG4iKQ0KCQkJCQkJCQkJCQkJb2suY2xvc2UoKQ0KCQkJCQkJCQkJCQkJb2tzLmFwcGVuZCh1aWQrcGFzczUpDQoJCQkJCQkJCQkJCWVsc2U6DQoJCQkJCQkJCQkJCQlpZiAid3d3LmZhY2Vib29rLmNvbSIgaW4gcVsiZXJyb3JfbXNnIl06DQoJCQkJCQkJCQkJCQkJcHJpbnQoIiBcMDMzWzE7MzNtIFtDSElHT1pJRS1DUF0gIit1aWQrIiB8ICIrcGFzczUrIlwwMzNbMDs5N20iKQ0KCQkJCQkJCQkJCQkJCWNwID0gb3BlbigiY3AudHh0IiwgImEiKQ0KCQkJCQkJCQkJCQkJCWNwLndyaXRlKHVpZCsifCIrcGFzczUrIlxuIikNCgkJCQkJCQkJCQkJCQljcC5jbG9zZSgpDQoJCQkJCQkJCQkJCQkJY3BzLmFwcGVuZCh1aWQrcGFzczUpDQoJCQkJCQkJCQkJCQllbHNlOg0KCQkJCQkJCQkJCQkJCWRhdGEgPSBzZXNzaW9uLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/Zm9ybWF0PWpzb24mZW1haWw9Iit1aWQrIiZwYXNzd29yZD0iK3Bhc3M2KyImY3JlZGVudGlhbHNfdHlwZT1kZXZpY2VfYmFzZWRfbG9naW5fcGFzc3dvcmQmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmZXJyb3JfZGV0YWlsX3R5cGU9YnV0dG9uX3dpdGhfZGlzYWJsZWQmc291cmNlPWRldmljZV9iYXNlZF9sb2dpbiZtZXRhX2luZl9mYm1ldGE9JTIwJmN1cnJlbnRseV9sb2dnZWRfaW5fdXNlcmlkPTAmbWV0aG9kPUdFVCZsb2NhbGU9ZW5fVVMmY2xpZW50X2NvdW50cnlfY29kZT1VUyZmYl9hcGlfY2FsbGVyX2NsYXNzPWNvbS5mYWNlYm9vay5mb3MuaGVhZGVyc3YyLmZiNGFvcmNhLkhlYWRlcnNWMkNvbmZpZ0ZldGNoUmVxdWVzdEhhbmRsZXImYWNjZXNzX3Rva2VuPTM1MDY4NTUzMTcyOHw2MmY4Y2U5Zjc0YjEyZjg0YzEyM2NjMjM0MzdhNGEzMiZmYl9hcGlfcmVxX2ZyaWVuZGx5X25hbWU9YXV0aGVudGljYXRlJmNwbD10cnVlIiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJCQkJCQkJCQkJCQlxID0ganNvbi5sb2FkcyhkYXRhKQ0KCQkJCQkJCQkJCQkJCWlmICJhY2Nlc3NfdG9rZW4iIGluIHEgYW5kICJFQUFBIiBpbiBxOg0KCQkJCQkJCQkJCQkJCQlwcmludCgiIFwwMzNbMTszMm0gW0NISUdPWklFLU9LXSAiK3VpZCsiIHwgIitwYXNzNisiXDAzM1swOzk3bSIpDQoJCQkJCQkJCQkJCQkJCW9rID0gb3Blbigib2sudHh0IiwgImEiKQ0KCQkJCQkJCQkJCQkJCQlvay53cml0ZSh1aWQrInwiK3Bhc3M2KyJcbiIpDQoJCQkJCQkJCQkJCQkJCW9rLmNsb3NlKCkNCgkJCQkJCQkJCQkJCQkJb2tzLmFwcGVuZCh1aWQrcGFzczYpDQoJCQkJCQkJCQkJCQkJZWxzZToNCgkJCQkJCQkJCQkJCQkJaWYgInd3dy5mYWNlYm9vay5jb20iIGluIHFbImVycm9yX21zZyJdOg0KCQkJCQkJCQkJCQkJCQkJcHJpbnQoIiBcMDMzWzE7MzNtIFtDSElHT1pJRS1DUF0gIit1aWQrIiB8ICIrcGFzczYrIlwwMzNbMDs5N20iKQ0KCQkJCQkJCQkJCQkJCQkJY3AgPSBvcGVuKCJjcC50eHQiLCAiYSIpDQoJCQkJCQkJCQkJCQkJCQljcC53cml0ZSh1aWQrInwiK3Bhc3M2KyJcbiIpDQoJCQkJCQkJCQkJCQkJCQljcC5jbG9zZSgpDQoJCQkJCQkJCQkJCQkJCQljcHMuYXBwZW5kKHVpZCtwYXNzNikNCgkJCQkJCQkJCQkJCQkJZWxzZToNCgkJCQkJCQkJCQkJCQkJCWRhdGEgPSBzZXNzaW9uLmdldCgiaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/Zm9ybWF0PWpzb24mZW1haWw9Iit1aWQrIiZwYXNzd29yZD0iK3Bhc3M3KyImY3JlZGVudGlhbHNfdHlwZT1kZXZpY2VfYmFzZWRfbG9naW5fcGFzc3dvcmQmZ2VuZXJhdGVfc2Vzc2lvbl9jb29raWVzPTEmZXJyb3JfZGV0YWlsX3R5cGU9YnV0dG9uX3dpdGhfZGlzYWJsZWQmc291cmNlPWRldmljZV9iYXNlZF9sb2dpbiZtZXRhX2luZl9mYm1ldGE9JTIwJmN1cnJlbnRseV9sb2dnZWRfaW5fdXNlcmlkPTAmbWV0aG9kPUdFVCZsb2NhbGU9ZW5fVVMmY2xpZW50X2NvdW50cnlfY29kZT1VUyZmYl9hcGlfY2FsbGVyX2NsYXNzPWNvbS5mYWNlYm9vay5mb3MuaGVhZGVyc3YyLmZiNGFvcmNhLkhlYWRlcnNWMkNvbmZpZ0ZldGNoUmVxdWVzdEhhbmRsZXImYWNjZXNzX3Rva2VuPTM1MDY4NTUzMTcyOHw2MmY4Y2U5Zjc0YjEyZjg0YzEyM2NjMjM0MzdhNGEzMiZmYl9hcGlfcmVxX2ZyaWVuZGx5X25hbWU9YXV0aGVudGljYXRlJmNwbD10cnVlIiwgaGVhZGVycz1oZWFkZXIpLnRleHQNCgkJCQkJCQkJCQkJCQkJCXEgPSBqc29uLmxvYWRzKGRhdGEpDQoJCQkJCQkJCQkJCQkJCQlpZiAiYWNjZXNzX3Rva2VuIiBpbiBxIGFuZCAiRUFBQSIgaW4gcToNCgkJCQkJCQkJCQkJCQkJCQlwcmludCgiIFwwMzNbMTszMm0gW0NISUdPWklFLU9LXSAiK3VpZCsiIHwgIitwYXNzNysiXDAzM1swOzk3bSIpDQoJCQkJCQkJCQkJCQkJCQkJb2sgPSBvcGVuKCJvay50eHQiLCAiYSIpDQoJCQkJCQkJCQkJCQkJCQkJb2sud3JpdGUodWlkKyJ8IitwYXNzNysiXG4iKQ0KCQkJCQkJCQkJCQkJCQkJCW9rLmNsb3NlKCkNCgkJCQkJCQkJCQkJCQkJCQlva3MuYXBwZW5kKHVpZCtwYXNzNykNCgkJCQkJCQkJCQkJCQkJCWVsc2U6DQoJCQkJCQkJCQkJCQkJCQkJaWYgInd3dy5mYWNlYm9vay5jb20iIGluIHFbImVycm9yX21zZyJdOg0KCQkJCQkJCQkJCQkJCQkJCQlwcmludCgiIFwwMzNbMTszM20gW0NISUdPWklFLUNQXSAiK3VpZCsiIHwgIitwYXNzNysiXDAzM1swOzk3bSIpDQoJCQkJCQkJCQkJCQkJCQkJCWNwID0gb3BlbigiY3AudHh0IiwgImEiKQ0KCQkJCQkJCQkJCQkJCQkJCQljcC53cml0ZSh1aWQrInwiK3Bhc3M3KyJcbiIpDQoJCQkJCQkJCQkJCQkJCQkJCWNwLmNsb3NlKCkNCgkJCQkJCQkJCQkJCQkJCQkJY3BzLmFwcGVuZCh1aWQrcGFzczcpDQoJCQkJCQkJCQkJCQkJCQkJZWxzZToNCgkJCQkJCQkJCQkJCQkJCQkJcGFzczggPSBuYW1lLmxvd2VyKCkuc3BsaXQoJyAnKVsxXStwMQ0KCQkJCQkJCQkJCQkJCQkJCQlkYXRhID0gc2Vzc2lvbi5nZXQoImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2Zvcm1hdD1qc29uJmVtYWlsPSIrdWlkKyImcGFzc3dvcmQ9IitwYXNzOCsiJmNyZWRlbnRpYWxzX3R5cGU9ZGV2aWNlX2Jhc2VkX2xvZ2luX3Bhc3N3b3JkJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJmVycm9yX2RldGFpbF90eXBlPWJ1dHRvbl93aXRoX2Rpc2FibGVkJnNvdXJjZT1kZXZpY2VfYmFzZWRfbG9naW4mbWV0YV9pbmZfZmJtZXRhPSUyMCZjdXJyZW50bHlfbG9nZ2VkX2luX3VzZXJpZD0wJm1ldGhvZD1HRVQmbG9jYWxlPWVuX1VTJmNsaWVudF9jb3VudHJ5X2NvZGU9VVMmZmJfYXBpX2NhbGxlcl9jbGFzcz1jb20uZmFjZWJvb2suZm9zLmhlYWRlcnN2Mi5mYjRhb3JjYS5IZWFkZXJzVjJDb25maWdGZXRjaFJlcXVlc3RIYW5kbGVyJmFjY2Vzc190b2tlbj0zNTA2ODU1MzE3Mjh8NjJmOGNlOWY3NGIxMmY4NGMxMjNjYzIzNDM3YTRhMzImZmJfYXBpX3JlcV9mcmllbmRseV9uYW1lPWF1dGhlbnRpY2F0ZSZjcGw9dHJ1ZSIsIGhlYWRlcnM9aGVhZGVyKS50ZXh0DQoJCQkJCQkJCQkJCQkJCQkJCXEgPSBqc29uLmxvYWRzKGRhdGEpDQoJCQkJCQkJCQkJCQkJCQkJCWlmICJhY2Nlc3NfdG9rZW4iIGluIHEgYW5kICJFQUFBIiBpbiBxOg0KCQkJCQkJCQkJCQkJCQkJCQkJcHJpbnQoIiBcMDMzWzE7MzJtIFtDSElHT1pJRS1PS10gIit1aWQrIiB8ICIrcGFzczgrIlwwMzNbMDs5N20iKQ0KCQkJCQkJCQkJCQkJCQkJCQkJb2sgPSBvcGVuKCJvay50eHQiLCAiYSIpDQoJCQkJCQkJCQkJCQkJCQkJCQlvay53cml0ZSh1aWQrInwiK3Bhc3M4KyJcbiIpDQoJCQkJCQkJCQkJCQkJCQkJCQlvay5jbG9zZSgpDQoJCQkJCQkJCQkJCQkJCQkJCQlva3MuYXBwZW5kKHVpZCtwYXNzOCkNCgkJCQkJCQkJCQkJCQkJCQkJZWxzZToNCgkJCQkJCQkJCQkJCQkJCQkJCWlmICJ3d3cuZmFjZWJvb2suY29tIiBpbiBxWyJlcnJvcl9tc2ciXToNCgkJCQkJCQkJCQkJCQkJCQkJCQlwcmludCgiIFwwMzNbMTszM20gW0NISUdPWklFLUNQXSAiK3VpZCsiIHwgIitwYXNzOCsiXDAzM1swOzk3bSIpDQoJCQkJCQkJCQkJCQkJCQkJCQkJY3AgPSBvcGVuKCJjcC50eHQiLCAiYSIpDQoJCQkJCQkJCQkJCQkJCQkJCQkJY3Aud3JpdGUodWlkKyJ8IitwYXNzOCsiXG4iKQ0KCQkJCQkJCQkJCQkJCQkJCQkJCWNwLmNsb3NlKCkNCgkJCQkJCQkJCQkJCQkJCQkJCQljcHMuYXBwZW5kKHVpZCtwYXNzOCkNCgkJCQkJCQkJCQkJCQ0KCQkJCQkJCQkJCQ0KCQkJCQkJCQkJCQ0KCQlleGNlcHQ6DQoJCQlwYXNzDQoJcCA9IFRocmVhZFBvb2woMzApDQoJcC5tYXAobWFpbiwgaWQpDQoJcHJpbnQoIiIpDQoJbGluZXgoKQ0KCXByaW50KCIiKQ0KCXByaW50KCJcMDMzWzkzOzFtIFRIRSBQUk9DRVNTIEhBUyBCRUVOIENPTVBMRVRFRCIpDQoJcHJpbnQoIlwwMzNbOTM7MW0gVE9UQUwgXDAzM1s5MjsxbU9LXDAzM1s5MzsxbS9cMDMzWzkxOzFtQ1A6ICIrc3RyKGxlbihva3MpKSsiLyIrc3RyKGxlbihjcHMpKSkNCglwcmludCgiIikNCglsaW5leCgpDQoJcHJpbnQoIiIpDQoJcmF3X2lucHV0KCJcMDMzWzkzOzFtIFBSRVNTIEVOVEVSIFRPIEJBQ0sgIikNCgltZW51KCkNCgkNCg0KZGVmIGV4X2lkKCk6DQogICAgZ2xvYmFsIHRva2VuDQogICAgaWRnID0gW10NCiAgICBvcy5zeXN0ZW0oImNsZWFyIikNCiAgICB0cnk6DQogICAgICAgIHRva2VuID0gb3BlbigidmF1X3Rva2VuLnR4dCIsICJyIikucmVhZCgpDQogICAgZXhjZXB0KEtleUVycm9yICwgSU9FcnJvcik6DQogICAgICAgIHRva2VuKCkNCiAgICB0cnk6DQogICAgICAgIHIgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL21lP2FjY2Vzc190b2tlbj0iK3Rva2VuKQ0KICAgICAgICBxID0ganNvbi5sb2FkcyhyLnRleHQpDQogICAgICAgIG5hbWUgPSBxWyJuYW1lIl0NCiAgICBleGNlcHQoS2V5RXJyb3IpOg0KICAgICAgICBsb2dvKCkNCiAgICAgICAgcHJpbnQoIiIpDQogICAgICAgIHByaW50KCJcdFwwMzNbOTE7MW0gIExPR0dFRCBJTiBUT0tFTiBIQVMgRVhQSVJFRCIpDQogICAgICAgIG9zLnN5c3RlbSgicm0gLXJmIHZhdV90b2tlbi50eHQiKQ0KICAgICAgICBwcmludCgiIikNCiAgICAgICAgdGltZS5zbGVlcCgxKQ0KICAgICAgICB0b2tlbigpDQogICAgb3Muc3lzdGVtKCdjbGVhcicpDQogICAgbG9nbygpDQogICAgcHJpbnQgJycNCiAgICBwcmludCAnXDAzM1s5MjsxbSAgICAgIERVTVAgUFVCTElDIElEIEZSSUVORCBMSVNUJw0KICAgIHByaW50ICcnDQogICAgaWRoID0gcmF3X2lucHV0KCdcMDMzWzkzOzFtICAgSU5QVVQgSUQ6ICcpDQogICAgdHJ5Og0KICAgICAgICByID0gcmVxdWVzdHMuZ2V0KCdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8nICsgaWRoICsgJz9hY2Nlc3NfdG9rZW49JyArIHRva2VuLCBoZWFkZXJzPWhlYWRlcikNCiAgICAgICAgcSA9IGpzb24ubG9hZHMoci50ZXh0KQ0KICAgICAgICBwcmludCAnIENPTExFQ1RJTiBGUk9NOiAnICsgcVsnbmFtZSddDQogICAgZXhjZXB0IEtleUVycm9yOg0KICAgICAgICBwcmludCAnJw0KICAgICAgICBwcmludCAnXDAzM1s5MzsxbVx0SU5WQUxJRCBJRCBQUk9WSURFRCcNCiAgICAgICAgcHJpbnQgJycNCiAgICAgICAgcmF3X2lucHV0KCdcMDMzWzkzOzFtIFBSRVNTIEVOVEVSIFRPIEJBQ0snKQ0KICAgICAgICBleF9pZCgpDQoNCiAgICByID0gcmVxdWVzdHMuZ2V0KCdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8nICsgaWRoICsgJy9mcmllbmRzP2FjY2Vzc190b2tlbj0nICsgdG9rZW4sIGhlYWRlcnM9aGVhZGVyKQ0KICAgIHEgPSBqc29uLmxvYWRzKHIudGV4dCkNCiAgICBpZHMgPSBvcGVuKCdpZHNfZnJpZW5kcy50eHQnLCAndycpDQogICAgZm9yIGkgaW4gcVsnZGF0YSddOg0KICAgICAgICB1aWQgPSBpWydpZCddLmVuY29kZSgndXRmLTgnKQ0KICAgICAgICBuYSA9IGlbJ25hbWUnXS5lbmNvZGUoJ3V0Zi04JykNCiAgICAgICAgaWRnLmFwcGVuZCh1aWQgKyAnfCcgKyBuYSkNCiAgICAgICAgaWRzLndyaXRlKHVpZCArICd8JyArIG5hICsgJ1xuJykNCg0KICAgIGlkcy5jbG9zZSgpDQogICAgcHJpbnQgJycNCiAgICBsaW5leCgpDQogICAgcHJpbnQgJycNCiAgICBwcmludCAnXDAzM1s5MjsxbSBUSEUgUFJPQ0VTUyBIQVMgQ09NUExFVEVEJw0KICAgIHByaW50ICdcMDMzWzkzOzFtIFRPVEFMIElEUzogXDAzM1s5MjsxbScgKyBzdHIobGVuKGlkZykpDQogICAgcHJpbnQgJycNCiAgICBsaW5leCgpDQogICAgcHJpbnQgJycNCiAgICByYXdfaW5wdXQoJ1wwMzNbOTU7MW0gUFJFU1MgRU5URVIgVE8gRE9XTkxPQUQgRklMRScpDQogICAgcHJpbnQgJ1wwMzNbOTM7MW0gRklMRSBET1dOTE9BREVEIFNVQ0NFU1NGVUxMWScNCiAgICBwcmludCAnXDAzM1s5MjsxbSBTQVZFRCAvc2RjYXJkL3VzZXJpZHMudHh0Jw0KICAgIHByaW50ICcnDQogICAgdGltZS5zbGVlcCgxKQ0KICAgIGV4X2lkKCkNCg0KaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoNCgltYWluKCkNCg=="))
